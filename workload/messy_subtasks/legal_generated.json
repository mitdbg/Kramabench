[
  {
    "id": "legal-hard-1",
    "query": "Report the average number of reported identity thefts for all metropolitan areas that are larger than one million in population in 2023. - If you don't have their population size in 2023, use two years where you know the censuses (or an estimate of the censurs) and linearly interpolate between them to estimate the 2023 population size.  - Be sure to robustly match the names of metropolitan areas: Use only the city and state portion of the name, ignoring suffixes like 'Metropolitan Statistical Area' or 'MSA' and normalizing punctuation. Drop entries where there's no match in the html for the areas fraud reports. Round to 4 decimal places",
    "answer": 13427.5676,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "metropolitan_statistics.html",
      "State MSA Identity Theft Data/"
    ],
    "subtasks": [
      {
        "id": "legal-hard-1-1",
        "query": "What files do you need to read to answer the above question? If you need all files of a directory `my_dir`, list it as `my_dir/*`",
        "answer": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/*"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/*"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-1-1",
        "step": "Load all state-level identity-theft csv files from 'State MSA Identity Theft data/' and (a) strips blank lines, (b) detects the header row, (c) stops at first almost-empty row, and (d) converts string numerics such as '1,234', '$5.2M', '7K' to proper numbers.",
        "query": "Load all state-level identity-theft csv files from 'State MSA Identity Theft data/'. How many columns are in each table?",
        "answer": 2,
        "answer_type": "numeric_exact",
        "data_sources": "State MSA Identity Theft Data/*"
      },
      {
        "id": "legal-hard-1-2",
        "step": "Concatenate the cleaned per-state files into one dataframe of identity-theft reports.",
        "query": "Concatenate the cleaned per-state files into one dataframe of identity-theft reports. How many rows are there in total?",
        "answer": 223,
        "answer_type": "numeric_exact",
        "data_sources": "State MSA Identity Theft Data/*"
      },
      {
        "id": "legal-hard-1-3",
        "step": "Parse metropolitan_statistics.html, locate the table captioned 'The 387 metropolitan statistical areas of the United States', and read it into a dataframe.",
        "query": "What is the exact text of the table caption that is used to identify the relevant table in the metropolitan_statistics HTML file?",
        "answer": "The 387 metropolitan statistical areas of the United States",
        "answer_type": "string_exact",
        "data_sources": "metropolitan_statistics.html"
      },
      {
        "id": "legal-hard-1-4",
        "step": "Create a 2023 population figure for each metro by linearly interpolating between the 2020 census value and the 2024 estimate: 2020 + (3/4)*(2024 -- 2020).",
        "query": "Create a 2023 population figure for each metro by linearly interpolating between the 2020 census value and the 2024 estimate. What are the deduced census statistics for each metro in 2023? Report a list of numbers.",
        "answer": [19975689, 12995960, 9418769, 8167370, 7634547, 6378074, 6397002, 6334562, 6309079, 5101676, 5004545, 4708120, 4673616, 4398443, 4113811, 3741029, 3362238, 3298757, 3030328, 2873728, 2827609, 2855395, 2814008, 2711790, 2483820, 2531642, 2446690, 2436687, 2365518, 2289560, 2238193, 2203764, 2153538, 2175364, 2116525, 1996730, 1790723, 1721873, 1694820, 1574521, 1525002, 1479789, 1386220, 1356232, 1340865, 1290055, 1189595, 1183395, 1171623, 1164404, 1161854, 1070970, 1048685, 1059253, 992658, 1003187, 979558, 966091, 976491, 944031, 909646, 923859, 919205, 903810, 909929, 880285, 879631, 876463, 876758, 860012, 852364, 835924, 820920, 825587, 837531, 819817, 806889, 794683, 772001, 763951, 738194, 742801, 721867, 708102, 700903, 697881, 702211, 660060, 657815, 645488, 656906, 630320, 612619, 609448, 609625, 590892, 600167, 602607, 581699, 575160, 568790, 572396, 566585, 560715, 555948, 539166, 529653, 531672, 529227, 500957, 491589, 486247, 480938, 466041, 478279, 467539, 464569, 459178, 459259, 454698, 449081, 445432, 440900, 436550, 436947, 429159, 424891, 428580, 415655, 424159, 427212, 418481, 416891, 406112, 397800, 412956, 404991, 403262, 400806, 398441, 394330, 385760, 392061, 390938, 387425, 385803, 382539, 382431, 370697, 373470, 371092, 372191, 359554, 363148, 369228, 365619, 354646, 348023, 339600, 337526, 333089, 330386, 325095, 325478, 315476, 315624, 312310, 306932, 304355, 302808, 304287, 300882, 292881, 293163, 289015, 282658, 282059, 278640, 281988, 281544, 279967, 278137, 274353, 273160, 271395, 271158, 263305, 268531, 265222, 264002, 260178, 264519, 254147, 258074, 248062, 245188, 247530, 244762, 245894, 240857, 236663, 232021, 232927, 231439, 232774, 231676, 229638, 228204, 228474, 226914, 225883, 223176, 219799, 221620, 223227, 217092, 221813, 216202, 217285, 213032, 210859, 205803, 210176, 209158, 201027, 207338, 205541, 206891, 202947, 204326, 200986, 204219, 200346, 201188, 198420, 191279, 189980, 190440, 185379, 184082, 188316, 184812, 182353, 182886, 180133, 182695, 180888, 181994, 181218, 181379, 178148, 177027, 175116, 172912, 169051, 171790, 167782, 170657, 166091, 169676, 168809, 169440, 168874, 168853, 165017, 164626, 164035, 162174, 159870, 157680, 160266, 159396, 158861, 158446, 157029, 155679, 155837, 155904, 154913, 154018, 155736, 155296, 154306, 153826, 148457, 153106, 151472, 151219, 146784, 149433, 147934, 149054, 146303, 145498, 145579, 146061, 146318, 144803, 145146, 142073, 138156, 137793, 138821, 138021, 137163, 136230, 135239, 134680, 133916, 131932, 134050, 131508, 130631, 130729, 130949, 128233, 128801, 127719, 127357, 126420, 125770, 124978, 124994, 126837, 125691, 125605, 124873, 120494, 121188, 121600, 121028, 119586, 120907, 119709, 118256, 116225, 116430, 114238, 113169, 113303, 114146, 114155, 113474, 114035, 112689, 111615, 112004, 107642, 106244, 106898, 106683, 105636, 104786, 104971, 104240, 104228, 103264, 102952, 102667, 101465, 100688, 101201, 101552, 99971, 99248, 98960, 97970, 98525, 95009, 95127, 90012, 87140, 88229, 88133, 84107, 84495, 83976, 83890, 81873, 80296, 77218, 76340, 65121, 62197, 62216, 58593, 58270],
        "answer_type": "list_approximate",
        "data_sources": "metropolitan_statistics.html"
      },
      {
        "id": "legal-hard-1-5",
        "step": "Normalize metropolitan-area names in both dataframes: lower-case, drop trailing 'Metropolitan Statistical Area' or 'MSA', and strip all non-alphanumeric characters, producing a common key.",
        "query": "Normalize metropolitan-area names in both dataframes: lower-case, drop trailing 'Metropolitan Statistical Area' or 'MSA', and strip all non-alphanumeric characters, producing a common key. What are the normalized metropolitan-area names from the identity theft report table to be used to join with the population table?",
        "answer": ["albanyga", "athensclarkecountyga", "atlantasandyspringsroswellga", "augustarichmondcountygasc", "brunswickstsimonsga", "cheyennewy", "bostoncambridgenewtonmanh", "concordnhmicropolitanstatisticalarea", "lebanonclaremontnhvtmicropolitanstatisticalarea", "manchesternashuanh", "appletonwi", "duluthmnwi", "eauclairewi", "fonddulacwi", "greenbaywi", "duluthmnwi", "fargondmn", "grandforksndmn", "lacrosseonalaskawimn", "mankatomn", "baltimorecolumbiatowsonmd", "hagerstownmartinsburgmdwv", "lexingtonparkmd", "philadelphiacamdenwilmingtonpanjdemd", "salisburymd", "allentownbethlehemeastonpanj", "altoonapa", "chambersburgpa", "eaststroudsburgpamicropolitanstatisticalarea", "eriepa", "abilenetx", "amarillotx", "austinroundrocksanmarcostx", "beaumontportarthurtx", "brownsvilleharlingentx", "capecoralfortmyersfl", "crestviewfortwaltonbeachdestinfl", "deltonadaytonabeachormondbeachfl", "gainesvillefl", "homosassaspringsfl", "annarbormi", "battlecreekmi", "baycitymi", "detroitwarrendearbornmi", "flintmi", "hilokailuahimicropolitanstatisticalarea", "kahuluiwailukuhi", "urbanhonoluluhi", "chattanoogatnga", "clarksvilletnky", "clevelandtn", "cookevilletnmicropolitanstatisticalarea", "jacksontn", "fayettevillespringdalerogersar", "fortsmitharok", "hotspringsar", "jonesboroar", "littlerocknorthlittlerockconwayar", "akronoh", "cantonmassillonoh", "cincinnatiohkyin", "clevelandoh", "columbusoh", "lincolnne", "omahaneia", "siouxcityianesd", "billingsmt", "bozemanmt", "kalispellmtmicropolitanstatisticalarea", "missoulamt", "bloomingtonin", "chicagonapervilleelginilin", "cincinnatiohkyin", "elkhartgoshenin", "evansvillein", "albanyschenectadytroyny", "binghamtonny", "buffalocheektowagany", "glensfallsny", "ithacany", "augustarichmondcountygasc", "charlestonnorthcharlestonsc", "charlotteconcordgastoniancsc", "columbiasc", "florencesc", "gulfportbiloxims", "hattiesburgms", "jacksonms", "memphistnmsar", "tupelomsmicropolitanstatisticalarea", "washingtonarlingtonalexandriadcvamdwv", "andersoncreekncmicropolitanstatisticalarea", "ashevillenc", "burlingtonnc", "charlotteconcordgastoniancsc", "durhamchapelhillnc", "aguadillapr", "arecibopr", "mayagezpr", "poncepr", "sanjuanbayamncaguaspr", "bridgeportstamforddanburyct", "hartfordwesthartfordeasthartfordct", "newhavenct", "norwichnewlondonwillimanticct", "torringtonctmicropolitanstatisticalarea", "fortsmitharok", "lawtonok", "oklahomacityok", "tulsaok", "beckleywv", "charlestonwv", "hagerstownmartinsburgmdwv", "huntingtonashlandwvkyoh", "morgantownwv", "boulderco", "coloradospringsco", "denverauroracentennialco", "fortcollinslovelandco", "grandjunctionco", "augustawatervillememicropolitanstatisticalarea", "bangorme", "lewistonauburnme", "portlandsouthportlandme", "alexandriala", "batonrougela", "hammondla", "houmabayoucanethibodauxla", "lafayettela", "loganutid", "ogdenut", "provooremlehiut", "saltlakecitymurrayut", "stgeorgeut", "bismarcknd", "fargondmn", "grandforksndmn", "blacksburgchristiansburgradfordva", "charlottesvilleva", "danvillevamicropolitanstatisticalarea", "harrisonburgva", "kingsportbristoltnva", "doverde", "philadelphiacamdenwilmingtonpanjdemd", "seaforddemicropolitanstatisticalarea", "bowlinggreenky", "cincinnatiohkyin", "clarksvilletnky", "corbinkymicropolitanstatisticalarea", "elizabethtownky", "amhersttownnorthamptonma", "barnstabletownma", "bostoncambridgenewtonmanh", "pittsfieldma", "providencewarwickrima", "allentownbethlehemeastonpanj", "atlanticcityhammontonnj", "newyorknewarkjerseycitynynj", "philadelphiacamdenwilmingtonpanjdemd", "trentonprincetonnj", "annistonoxfordal", "auburnopelikaal", "birminghamal", "columbusgaal", "daphnefairhopefoleyal", "flagstaffaz", "lakehavasucitykingmanaz", "phoenixmesachandleraz", "prescottvalleyprescottaz", "showlowazmicropolitanstatisticalarea", "providencewarwickrima", "bakersfielddelanoca", "chicoca", "elcentroca", "eurekaarcatacamicropolitanstatisticalarea", "fresnoca", "lasvegashendersonnorthlasvegasnv", "renonv", "anchorageak", "bloomingtonil", "champaignurbanail", "chicagonapervilleelginilin", "davenportmolinerockislandiail", "decaturil", "boisecityid", "coeurdaleneid", "idahofallsid", "loganutid", "twinfallsid", "albanyor", "bendor", "eugenespringfieldor", "medfordor", "portlandvancouverhillsboroorwa", "amesia", "cedarrapidsia", "davenportmolinerockislandiail", "desmoineswestdesmoinesia", "iowacityia", "burlingtonsouthburlingtonvt", "lebanonclaremontnhvtmicropolitanstatisticalarea", "joplinmoks", "kansascitymoks", "lawrenceks", "manhattanks", "stjosephmoks", "bellinghamwa", "bremertonsilverdaleportorchardwa", "kennewickrichlandwa", "longviewkelsowa", "moseslakewamicropolitanstatisticalarea", "columbiamo", "jeffersoncitymo", "joplinmoks", "kansascitymoks", "springfieldmo", "albuquerquenm", "farmingtonnm", "lascrucesnm", "santafenm", "rapidcitysd", "siouxcityianesd", "siouxfallssdmn"],
        "answer_type": "list_exact",
        "data_sources": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/*"
        ]
      },
      {
        "id": "legal-hard-1-6",
        "step": "Join the identity-theft dataframe and the population dataframe on the normalized key; drop any rows that fail to match in either source.",
        "query": "What is the resulting number of rows after joining the identity theft reports and the population dataframes using the normalized metropolitan area key?",
        "answer": 201,
        "answer_type": "numeric_exact",
        "data_sources": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/*"
        ]
      },
      {
        "id": "legal-hard-1-7",
        "step": "Filter for only rows whose interpolated 2023 population exceeds 1,000,000.",
        "query": "After joining the population and reports data on the metropolitan statistical area and filtering for population more than one million, how many rows are left?",
        "answer": 37,
        "answer_type": "numeric_exact",
        "data_sources": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/*"
        ]
      },
      {
        "id": "legal-hard-1-8",
        "step": "Compute the mean of the '# of Reports' column across these large-population metros to obtain the requested average number of reported identity-theft cases.",
        "query": "What is the average number of reported identity thefts per 100,000 people in metropolitan areas with a 2023 population exceeding one million?",
        "answer": 13427.5676,
        "answer_type": "numeric_exact",
        "data_sources": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/*"
        ]
      }
    ]
  },
  {
    "id": "legal-hard-2",
    "query": "Which metropolitan area is the one with the highest rate of identity thefts per 100,000 population. - If you don't have their population size in 2023, use two years where you know the censuses (or an estimate of the censurs) and linearly interpolate between them to estimate the 2023 population size.  - Be sure to robustly match the names of metropolitan areas: Use only the city and state portion of the name, ignoring suffixes like 'Metropolitan Statistical Area' or 'MSA' and normalizing punctuation. Drop entries where there's no match in the html for the areas fraud reports. - Ignore orderings in the csv files and focus on the numerical data presented.",
    "answer": "Atlanta-Sandy Springs-Roswell GA Metropolitan Statistical Area",
    "answer_type": "string_approximate",
    "runtime": 1,
    "data_sources": [
      "metropolitan_statistics.html",
      "State MSA Identity Theft Data/"
    ],
    "subtasks": [
      {
        "id": "legal-hard-2-1",
        "query": "What files do you need to read to answer the above question? If it's an entire directory `my_dir`, give the answer as `my_dir/*`.",
        "answer": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/*"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-2-1",
        "step": "Load every CSV in the 'State MSA Identity Theft data' folder, trimming blank lines.",
        "query": "What are the column names in the CSV files within the 'State MSA Identity Theft data' folder?",
        "answer": ["Metropolitan Area", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": ["State MSA Identity Theft Data/"]
      },
      {
        "id": "legal-hard-2-2",
        "step": "Strip commas, dollar signs and suffixes (K, M) so '# of Reports' becomes numeric.",
        "query": "What is the expected format of the '# of Reports' column after data cleaning?",
        "answer": "Numeric / integers",
        "answer_type": "string_approximate",
        "data_sources": ["State MSA Identity Theft Data/"]
      },
      {
        "id": "legal-hard-2-3",
        "step": "Vertically concatenate the cleaned state-level CSV frames into one dataframe.",
        "query": "What is the shape (number of rows and columns) of the combined dataframe containing the cleaned state-level identity theft reports? How many rows are there?",
        "answer": 223,
        "answer_type": "numeric_exact",
        "data_sources": ["State MSA Identity Theft Data/"]
      },
      {
        "id": "legal-hard-2-4",
        "step": "Open metropolitan_statistics.html, locate the table titled like 'The 387 metropolitan statistical areas of the United States', and read it into a dataframe (df_population).",
        "query": "What is the file namd and table name containing the metropolitan area population information? Answer in a list of strings.",
        "answer": ["metropolitan_statistics.html", "The 387 metropolitan statistical areas of the United States"],
        "answer_type": "list_exact",
        "data_sources": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/"
        ]
      },
      {
        "id": "legal-hard-2-5",
        "step": "Create a 2023 population figure for each metro by linearly interpolating between the 2020 census value and the 2024 estimate: 2020 + (3/4)*(2024 -- 2020).",
        "query": "Create a 2023 population figure for each metro by linearly interpolating between the 2020 census value and the 2024 estimate. What are the deduced census statistics for each metro in 2023? Report a list of numbers.",
        "answer": [19975689, 12995960, 9418769, 8167370, 7634547, 6378074, 6397002, 6334562, 6309079, 5101676, 5004545, 4708120, 4673616, 4398443, 4113811, 3741029, 3362238, 3298757, 3030328, 2873728, 2827609, 2855395, 2814008, 2711790, 2483820, 2531642, 2446690, 2436687, 2365518, 2289560, 2238193, 2203764, 2153538, 2175364, 2116525, 1996730, 1790723, 1721873, 1694820, 1574521, 1525002, 1479789, 1386220, 1356232, 1340865, 1290055, 1189595, 1183395, 1171623, 1164404, 1161854, 1070970, 1048685, 1059253, 992658, 1003187, 979558, 966091, 976491, 944031, 909646, 923859, 919205, 903810, 909929, 880285, 879631, 876463, 876758, 860012, 852364, 835924, 820920, 825587, 837531, 819817, 806889, 794683, 772001, 763951, 738194, 742801, 721867, 708102, 700903, 697881, 702211, 660060, 657815, 645488, 656906, 630320, 612619, 609448, 609625, 590892, 600167, 602607, 581699, 575160, 568790, 572396, 566585, 560715, 555948, 539166, 529653, 531672, 529227, 500957, 491589, 486247, 480938, 466041, 478279, 467539, 464569, 459178, 459259, 454698, 449081, 445432, 440900, 436550, 436947, 429159, 424891, 428580, 415655, 424159, 427212, 418481, 416891, 406112, 397800, 412956, 404991, 403262, 400806, 398441, 394330, 385760, 392061, 390938, 387425, 385803, 382539, 382431, 370697, 373470, 371092, 372191, 359554, 363148, 369228, 365619, 354646, 348023, 339600, 337526, 333089, 330386, 325095, 325478, 315476, 315624, 312310, 306932, 304355, 302808, 304287, 300882, 292881, 293163, 289015, 282658, 282059, 278640, 281988, 281544, 279967, 278137, 274353, 273160, 271395, 271158, 263305, 268531, 265222, 264002, 260178, 264519, 254147, 258074, 248062, 245188, 247530, 244762, 245894, 240857, 236663, 232021, 232927, 231439, 232774, 231676, 229638, 228204, 228474, 226914, 225883, 223176, 219799, 221620, 223227, 217092, 221813, 216202, 217285, 213032, 210859, 205803, 210176, 209158, 201027, 207338, 205541, 206891, 202947, 204326, 200986, 204219, 200346, 201188, 198420, 191279, 189980, 190440, 185379, 184082, 188316, 184812, 182353, 182886, 180133, 182695, 180888, 181994, 181218, 181379, 178148, 177027, 175116, 172912, 169051, 171790, 167782, 170657, 166091, 169676, 168809, 169440, 168874, 168853, 165017, 164626, 164035, 162174, 159870, 157680, 160266, 159396, 158861, 158446, 157029, 155679, 155837, 155904, 154913, 154018, 155736, 155296, 154306, 153826, 148457, 153106, 151472, 151219, 146784, 149433, 147934, 149054, 146303, 145498, 145579, 146061, 146318, 144803, 145146, 142073, 138156, 137793, 138821, 138021, 137163, 136230, 135239, 134680, 133916, 131932, 134050, 131508, 130631, 130729, 130949, 128233, 128801, 127719, 127357, 126420, 125770, 124978, 124994, 126837, 125691, 125605, 124873, 120494, 121188, 121600, 121028, 119586, 120907, 119709, 118256, 116225, 116430, 114238, 113169, 113303, 114146, 114155, 113474, 114035, 112689, 111615, 112004, 107642, 106244, 106898, 106683, 105636, 104786, 104971, 104240, 104228, 103264, 102952, 102667, 101465, 100688, 101201, 101552, 99971, 99248, 98960, 97970, 98525, 95009, 95127, 90012, 87140, 88229, 88133, 84107, 84495, 83976, 83890, 81873, 80296, 77218, 76340, 65121, 62197, 62216, 58593, 58270],
        "answer_type": "list_approximate",
        "data_sources": "metropolitan_statistics.html"
      },
      {
        "id": "legal-hard-2-6",
        "step": "Normalizing the metro name column, by lower casing, removing the suffixes 'Metropolitan Statistical Area' or 'MSA', then stripping all non-alphanumeric characters.",
        "query": "Normalize metropolitan-area names in both dataframes: lower-case, drop trailing 'Metropolitan Statistical Area' or 'MSA', and strip all non-alphanumeric characters, producing a common key. What are the normalized metropolitan-area names from the identity theft report table to be used to join with the population table?",
        "answer": ["albanyga", "athensclarkecountyga", "atlantasandyspringsroswellga", "augustarichmondcountygasc", "brunswickstsimonsga", "cheyennewy", "bostoncambridgenewtonmanh", "concordnhmicropolitanstatisticalarea", "lebanonclaremontnhvtmicropolitanstatisticalarea", "manchesternashuanh", "appletonwi", "duluthmnwi", "eauclairewi", "fonddulacwi", "greenbaywi", "duluthmnwi", "fargondmn", "grandforksndmn", "lacrosseonalaskawimn", "mankatomn", "baltimorecolumbiatowsonmd", "hagerstownmartinsburgmdwv", "lexingtonparkmd", "philadelphiacamdenwilmingtonpanjdemd", "salisburymd", "allentownbethlehemeastonpanj", "altoonapa", "chambersburgpa", "eaststroudsburgpamicropolitanstatisticalarea", "eriepa", "abilenetx", "amarillotx", "austinroundrocksanmarcostx", "beaumontportarthurtx", "brownsvilleharlingentx", "capecoralfortmyersfl", "crestviewfortwaltonbeachdestinfl", "deltonadaytonabeachormondbeachfl", "gainesvillefl", "homosassaspringsfl", "annarbormi", "battlecreekmi", "baycitymi", "detroitwarrendearbornmi", "flintmi", "hilokailuahimicropolitanstatisticalarea", "kahuluiwailukuhi", "urbanhonoluluhi", "chattanoogatnga", "clarksvilletnky", "clevelandtn", "cookevilletnmicropolitanstatisticalarea", "jacksontn", "fayettevillespringdalerogersar", "fortsmitharok", "hotspringsar", "jonesboroar", "littlerocknorthlittlerockconwayar", "akronoh", "cantonmassillonoh", "cincinnatiohkyin", "clevelandoh", "columbusoh", "lincolnne", "omahaneia", "siouxcityianesd", "billingsmt", "bozemanmt", "kalispellmtmicropolitanstatisticalarea", "missoulamt", "bloomingtonin", "chicagonapervilleelginilin", "cincinnatiohkyin", "elkhartgoshenin", "evansvillein", "albanyschenectadytroyny", "binghamtonny", "buffalocheektowagany", "glensfallsny", "ithacany", "augustarichmondcountygasc", "charlestonnorthcharlestonsc", "charlotteconcordgastoniancsc", "columbiasc", "florencesc", "gulfportbiloxims", "hattiesburgms", "jacksonms", "memphistnmsar", "tupelomsmicropolitanstatisticalarea", "washingtonarlingtonalexandriadcvamdwv", "andersoncreekncmicropolitanstatisticalarea", "ashevillenc", "burlingtonnc", "charlotteconcordgastoniancsc", "durhamchapelhillnc", "aguadillapr", "arecibopr", "mayagezpr", "poncepr", "sanjuanbayamncaguaspr", "bridgeportstamforddanburyct", "hartfordwesthartfordeasthartfordct", "newhavenct", "norwichnewlondonwillimanticct", "torringtonctmicropolitanstatisticalarea", "fortsmitharok", "lawtonok", "oklahomacityok", "tulsaok", "beckleywv", "charlestonwv", "hagerstownmartinsburgmdwv", "huntingtonashlandwvkyoh", "morgantownwv", "boulderco", "coloradospringsco", "denverauroracentennialco", "fortcollinslovelandco", "grandjunctionco", "augustawatervillememicropolitanstatisticalarea", "bangorme", "lewistonauburnme", "portlandsouthportlandme", "alexandriala", "batonrougela", "hammondla", "houmabayoucanethibodauxla", "lafayettela", "loganutid", "ogdenut", "provooremlehiut", "saltlakecitymurrayut", "stgeorgeut", "bismarcknd", "fargondmn", "grandforksndmn", "blacksburgchristiansburgradfordva", "charlottesvilleva", "danvillevamicropolitanstatisticalarea", "harrisonburgva", "kingsportbristoltnva", "doverde", "philadelphiacamdenwilmingtonpanjdemd", "seaforddemicropolitanstatisticalarea", "bowlinggreenky", "cincinnatiohkyin", "clarksvilletnky", "corbinkymicropolitanstatisticalarea", "elizabethtownky", "amhersttownnorthamptonma", "barnstabletownma", "bostoncambridgenewtonmanh", "pittsfieldma", "providencewarwickrima", "allentownbethlehemeastonpanj", "atlanticcityhammontonnj", "newyorknewarkjerseycitynynj", "philadelphiacamdenwilmingtonpanjdemd", "trentonprincetonnj", "annistonoxfordal", "auburnopelikaal", "birminghamal", "columbusgaal", "daphnefairhopefoleyal", "flagstaffaz", "lakehavasucitykingmanaz", "phoenixmesachandleraz", "prescottvalleyprescottaz", "showlowazmicropolitanstatisticalarea", "providencewarwickrima", "bakersfielddelanoca", "chicoca", "elcentroca", "eurekaarcatacamicropolitanstatisticalarea", "fresnoca", "lasvegashendersonnorthlasvegasnv", "renonv", "anchorageak", "bloomingtonil", "champaignurbanail", "chicagonapervilleelginilin", "davenportmolinerockislandiail", "decaturil", "boisecityid", "coeurdaleneid", "idahofallsid", "loganutid", "twinfallsid", "albanyor", "bendor", "eugenespringfieldor", "medfordor", "portlandvancouverhillsboroorwa", "amesia", "cedarrapidsia", "davenportmolinerockislandiail", "desmoineswestdesmoinesia", "iowacityia", "burlingtonsouthburlingtonvt", "lebanonclaremontnhvtmicropolitanstatisticalarea", "joplinmoks", "kansascitymoks", "lawrenceks", "manhattanks", "stjosephmoks", "bellinghamwa", "bremertonsilverdaleportorchardwa", "kennewickrichlandwa", "longviewkelsowa", "moseslakewamicropolitanstatisticalarea", "columbiamo", "jeffersoncitymo", "joplinmoks", "kansascitymoks", "springfieldmo", "albuquerquenm", "farmingtonnm", "lascrucesnm", "santafenm", "rapidcitysd", "siouxcityianesd", "siouxfallssdmn"],
        "answer_type": "list_exact",
        "data_sources": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/*"
        ]
      },
      {
        "id": "legal-hard-2-7",
        "step": "Inner join on msa_key so only metros present in both the fraud and population sources are retained (dropping unmatched entries automatically).",
        "query": "Inner join on the normalized metro area so only metros present in both the fraud and population sources are retained. How many rows are left in the ata?",
        "answer": 201,
        "answer_type": "numeric_exact",
        "data_sources": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/*"
        ]
      },
      {
        "id": "legal-hard-2-8",
        "step": "Compute the identity-theft rate per 100 000 residents: fraud_per_100k = (# of Reports / interpolated_2023_population) * 100 000.",
        "query": "Compute the identity-theft rate per 100 000 residents. What are the identity theft rates of each metro? Report a list of numbers.",
        "answer": [414.16640468021706, 174.17200613663027, 672.7536963092318, 335.2265515928417, 186.70681867068186, 137.97861331493618, 398.2180198199836, 165.4300247328387, 111.50163616531329, 95.54456852214929, 90.7969574453505, 98.81043745203378, 105.07702145672778, 95.54456852214929, 143.55975009969427, 95.94350846221744, 89.06754484140704, 98.2955738361995, 313.09153374576897, 163.5541422855877, 203.1630633373934, 450.747248528668, 182.82095020997636, 274.22936889757295, 88.4977710140852, 116.75902200118654, 163.1096595923748, 179.3225227991862, 195.8559086249817, 300.86721259994687, 373.204564791274, 202.25604030207919, 326.2258291423622, 192.53831873962972, 276.78228815003314, 220.78354189811813, 174.60307903498685, 206.44228452084502, 146.36040503001882, 115.5878467635403, 356.6489323608377, 231.11525509470272, 146.31023866857683, 142.84475376973583, 195.11809372201085, 214.95877502944643, 153.86853044070702, 171.6916549107094, 134.71158858133128, 130.4879471480606, 172.04989446939612, 191.74267112851135, 345.7028003104911, 244.94062325996032, 180.38652115986287, 195.53975436328378, 327.0716992650425, 308.78987042169666, 121.54369107788854, 159.16861597851425, 90.67241841199623, 146.50283553875235, 173.63055897838018, 132.09935136845436, 126.40743892362524, 397.9925614483166, 195.53975436328378, 109.96537055436052, 146.4091046548507, 188.91583848849746, 156.06997818288787, 193.9142095306295, 105.09135782811192, 112.65099019273732, 335.2265515928417, 327.32494568048395, 358.7483276506759, 320.6931996297726, 319.447356073992, 221.6150075797048, 193.70894909688013, 307.2380561820791, 410.33213634482223, 307.7848029436289, 194.274053063341, 177.6465167404085, 358.7483276506759, 220.03888224165425, 266.1239986709326, 224.40664923858043, 245.8446345364768, 176.55880507269757, 130.4879471480606, 177.39303200170298, 200.5691351942743, 184.51679961094132, 109.81750651762438, 157.18419931544076, 163.5541422855877, 109.68832266241998, 100.65248147079319, 204.91183040443605, 219.17070055608735, 232.8460813482897, 158.6201129224137, 146.36892475136048, 111.76844661129633, 121.67579964635236, 142.2557956882021, 193.889462879225, 523.4012898590432, 290.25159964098555, 213.7304411793944, 280.1691569259111, 106.54490106544901, 135.5937339029785, 141.15530605775717, 171.4655576700218, 185.04976943395664, 111.03611939648603, 143.55975009969427, 95.94350846221744, 85.16764288932602, 132.81211954861587, 112.30175118279102, 109.50658000064038, 348.98410358985154, 450.747248528668, 110.83286717308225, 195.53975436328378, 214.95877502944643, 142.1201818510172, 225.9667367244542, 237.40050760544898, 398.2180198199836, 190.99230596035744, 319.9159792780354, 274.22936889757295, 234.28830895964705, 339.5076885708423, 450.747248528668, 284.44408064705914, 226.74568410203554, 222.2255071521136, 333.5589002980006, 400.02703715765733, 183.75192309962344, 141.9260606561669, 150.1057461375775, 326.89257412662033, 172.13438575839913, 319.9159792780354, 274.6938930924005, 182.63704950324635, 127.47078104824024, 273.36603585446954, 552.7330588902727, 187.94282599905063, 114.57044724450668, 185.10972699225798, 253.67749328439695, 397.9925614483166, 162.12074857948232, 183.15739719552545, 142.0807255928206, 121.68490129398856, 144.23478084657472, 106.54490106544901, 107.05927266087937, 139.9154424065456, 143.74774193052448, 158.15380915409932, 155.53642031801564, 179.64625330121714, 107.61660415025773, 139.49959911842006, 162.12074857948232, 154.41551640345128, 140.97120870372828, 112.92313348564826, 116.76502498285014, 189.75128597042345, 156.78119945869227, 174.4876744876745, 151.19999331712737, 150.26166996526808, 132.15843295817007, 122.03780953226236, 119.29061845558412, 135.7663897645949, 100.51646949126763, 116.76502498285014, 189.75128597042345, 143.00564089106956, 169.18166083785513, 90.06180388009386, 189.49910538794433, 122.27040865063141, 107.77961017543404, 90.67241841199623, 116.24527753560012],
        "answer_type": "list_exact",
        "data_sources": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/*"
        ]
      },
      {
        "id": "legal-hard-2-9",
        "step": "Select the row whose fraud_per_100k is maximal and print its original 'Metropolitan Area' name; this is the metro with the highest identity-theft rate.",
        "query": "Which metropolitan area has the highest rate of identity theft per 100,000 residents?",
        "answer": "Atlanta-Sandy Springs-Roswell GA Metropolitan Statistical Area",
        "answer_type": "string_exact",
        "data_sources": [
          "metropolitan_statistics.html",
          "State MSA Identity Theft Data/*"
        ]
      }
    ]
  },
  {
    "id": "legal-easy-3",
    "query": "Give the ratio of identity theft reports in 2024 vs 2001? Round to 4 decimal places",
    "answer": 13.1628,
    "answer_type": "numeric_approximate",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Number_of_Reports_by_Type.csv"
    ],
    "subtasks": [
      {
        "id": "legal-easy-3-1",
        "query": "What files do you need to read to answer the above question?",
        "answer": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-easy-3-1",
        "step": "Read the raw file 2024_CSN_Number_of_Reports_by_Type.csv line-by-line and strip empty/blank lines.",
        "query": "What file(s) do you need to answer the question above?",
        "answer": ["2024_CSN_Number_of_Reports_by_Type.csv"],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-3-2",
        "step": "Identify the header row as the first row that contains at least two non-empty comma-separated cells.",
        "query": "How many columns are in 2024_CSN_Number_of_Reports_by_Type.csv?",
        "answer": 4,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-3-3",
        "step": "Keep subsequent rows only as long as they also contain at least two non-empty cells, thereby discarding footnotes or other non-tabular text that may follow the data block.",
        "query": "How many rows are in 2024_CSN_Number_of_Reports_by_Type.csv?",
        "answer": 24,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-3-4",
        "step": "Clean every value in every column with convert_value: \n- trim whitespace \n- remove thousands commas \n- drop leading $ \n- translate K and M suffixes into *1 000 or *1 000 000 \n- convert numeric strings to int/float while leaving non-numeric text unchanged \n- keep NaN for blanks.",
        "query": "What are the number of Identit Theft Reports each year? Report a list of numbers.",
        "answer": [86250, 161977, 215240, 246909, 255687, 246214, 259314, 314587, 278360, 251074, 279191, 369958, 290098, 332545, 490085, 398356, 370915, 444338, 649390, 1388532, 1434477, 1107004, 1036855, 1135291],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-3-5",
        "step": "From the cleaned data frame pick the 'Identity Theft ' column for rows where Year == 2001 and Year == 2024.",
        "query": "What values are extracted from the 'Identity Theft ' column where the 'Year' column equals 2001 and 2024?",
        "answer": [86250, 1135291],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-3-6",
        "step": "Compute and print the ratio id_theft_2024 / id_theft_2001.",
        "query": "What is the final ratio of the identity theft reports of 2024 to that of 2001? Round to 4 decimal places",
        "answer": 13.1628,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-easy-4",
    "query": "How many frauds were reported by FTC over the web between 2022 and 2024 in total?",
    "answer": 2111635,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Data_Contributors.csv"
    ],
    "subtasks": [
      {
        "id": "legal-easy-4-1",
        "query": "What files do you need to read to answer the above question?",
        "answer": [
          "2024_CSN_Data_Contributors.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Data_Contributors.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-easy-4-1",
        "step": "Load 2024_CSN_Data_Contributors.csv trimming blank lines, detects the true header row, keeps only the contiguous data block.",
        "query": "Load the relevant data file. How many unique data contributors are there within FTC?",
        "answer": 6,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Data_Contributors.csv"
        ]
      },
      {
        "id": "legal-easy-4-2",
        "step": "Convert every cell to numeric when possible--removing commas and dollar signs, and expanding K (*1,000) or M (*1,000,000) suffixes--to ensure '# of Reports' and other numeric columns are proper numbers.",
        "query": "What are the number of reports of each row in the FTC table? Answer with a list of numbers.",
        "answer": [796366, 693789, 622035, 191494, 155803, 100294, 696163, 702598, 633956, 224730, 137005, 106112, 787763, 715248, 681383, 240869, 135095, 104102],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Data_Contributors.csv"
        ]
      },
      {
        "id": "legal-easy-4-3",
        "step": "Select rows whose Year is between 2022 and 2024 (inclusive).",
        "query": "How many rows in the FTC report table are left after selecting for year 2022 and 2024 inclusive?",
        "answer": 18,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Data_Contributors.csv"
        ]
      },
      {
        "id": "legal-easy-4-4",
        "step": "Filter rows whose 'Data Contributor' string matches 'FTC - Web Reports (Fraud & Other)'.",
        "query": "Filter for both year between 2022 and 2024 as well as data contributor matching 'FTC - Web Reports (Faaud & Others). What are the number of reports? Answer with a list of numbers.",
        "answer": [693789, 702598, 715248],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Data_Contributors.csv"
        ]
      },
      {
        "id": "legal-easy-4-5",
        "step": "Sum the '# of Reports' column for the rows that meet both conditions to obtain the total number of FTC web-reported fraud cases over 2022-2024.",
        "query": "What is the total number of fraud reports from 2022-2024 reported by FTC over the web",
        "answer": 2111635,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Data_Contributors.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-easy-5",
    "query": "What is the total number of money befrauded when summed over all payment methods. Give an integer number in millions of dollars.",
    "answer": 5435,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Fraud_Reports_by_Payment_Method.csv"
    ],
    "subtasks": [
      {
        "id": "legal-easy-5-1",
        "query": "What files do you need to read to answer the above question?",
        "answer": [
          "2024_CSN_Fraud_Reports_by_Payment_Method.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Fraud_Reports_by_Payment_Method.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-easy-5-1",
        "step": "Read the raw file 2024_CSN_Fraud_Reports_by_Payment_Method.csv line-by-line, discarding blank lines.",
        "query": "What file is needed to answer the question about the total number of money befrauded when summed over all payment methods?",
        "answer": "2024_CSN_Fraud_Reports_by_Payment_Method.csv",
        "answer_type": "string_approximate",
        "data_sources": ["2024_CSN_Fraud_Reports_by_Payment_Method.csv"]
      },
      {
        "id": "legal-easy-5-2",
        "step": "Detect the header row as the first line that contains at least two non-empty comma-separated fields.",
        "query": "What are the column names of the needed file 2024_CSN_Fraud_Reports_by_Payment_Method.csv?",
        "answer": ["Payment Method", "# of Reports", "Total $ Loss"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Fraud_Reports_by_Payment_Method.csv"]
      },
      {
        "id": "legal-easy-5-3",
        "step": "Collect subsequent lines as data until a line is reached that has fewer than two non-empty cells (marks end of table).",
        "query": "What are all the payment methods covered in the data?",
        "answer": ["Credit Cards", "Payment App or Service", "Debit Card", "Bank Transfer or Payment", "Cryptocurrency", "Gift Card or Reload Card", "Wire Transfer", "Cash", "Check", "Money Order"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Fraud_Reports_by_Payment_Method.csv"]
      },
      {
        "id": "legal-easy-5-4",
        "step": "Strip spaces, commas, dollar signs, interpret K/M suffixes, and convert strings to numeric values (ints/floats), leaving other entries unchanged or as NaN.",
        "query": "What are the numeric values in millions in the ' Total $ Loss' column after data cleaning?",
        "answer": [275, 391, 180, 2089, 1417, 212, 287, 308, 225, 51],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Fraud_Reports_by_Payment_Method.csv"]
      },
      {
        "id": "legal-easy-5-5",
        "step": "After data cleaning, take the ' Total $ Loss' column and compute its sum.",
        "query": "What is the sum of money befrauded over all methods in millions?",
        "answer": 5435,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Fraud_Reports_by_Payment_Method.csv"]
      }
    ]
  },
  {
    "id": "legal-hard-6",
    "query": "What is the ratio of reported credit card frauds between 2024 and 2020? (2024 reports ) / (2020 reports) and round to 4 decimal places",
    "answer": 1.1413,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-6-1",
        "query": "What files do you need to read to answer the above question?",
        "answer": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-6-2",
        "query": "What's the column header of the column denoting the year?",
        "answer": "Theft Type",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-6-3",
        "query": "What's the column header of the column denoting the theft type?",
        "answer": "Year",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-6-1",
        "step": "Read 2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv, discarding blank lines.",
        "query": "Read 2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv, discarding blank lines. How many data rows are there?",
        "answer": 15,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-6-2",
        "step": "Identify the first line that contains at least two non-empty comma-separated fields and treat it as the header; keep subsequent rows only until a line with <2 non-empty cells appears (handles messy extra footers).",
        "query": "Identify the first line that contains at least two non-empty comma-separated fields and treat it as the header; keep subsequent rows only until a line with <2 non-empty cells appears (handles messy extra footers). What are the column names?",
        "answer": ["Theft Type", "Year", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-6-3",
        "step": "Strip whitespace, remove commas and dollar signs, interpret K / M suffixes as *1 000 or *1 000 000, and cast to int/float where possible (ensures numeric '# of Reports' values).",
        "query": "What are the cleaned numeric values from the '# of Reports' column?",
        "answer": [89684, 393446, 205092, 124544, 389790, 197981, 156144, 440675, 153598, 136862, 416579, 149803, 114608, 449032, 176400],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-6-4",
        "step": "Trim and lower-case the entries in the 'Year' column to standardise text values.",
        "query": "What are the normalized (stripped trailing spaces and lower cased) values for the 'Year' column as shown in the data?",
        "answer": ["bank account", "credit card", "loan or lease", "bank account", "credit card", "loan or lease", "bank account", "credit card", "loan or lease", "bank account", "credit card", "loan or lease", "bank account", "credit card", "loan or lease"],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-6-5",
        "step": "Because in the CSV's two key columns are swapped, get credit card related reports for 2020 and 2024 by matching where df['Theft Type'] equals the numeric year and df['Year'] equals the (lower-cased) theft-type string to extract the \"# of Reports\" value.",
        "query": "What are the numeric values for the number of reported credit card frauds in 2020 and 2024?",
        "answer": [393446, 449032],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-6-6",
        "step": "Using Credit Card fraud counts for 2020 and 2024, compute and print the ratio (2024 count / 2020 count).",
        "query": "What is the ratio of '# of Reports' for 'Credit Card' in 2024 to 2020? Round to 4 decimal places.",
        "answer": 1.1413,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"]
      }
    ]
  },
  {
    "id": "legal-hard-7",
    "query": "Which fraud category was growing the fastest between 2020 and 2024 in relative terms?",
    "answer": "Bank Account",
    "answer_type": "string_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-7-1",
        "query": "What files do you need to read to answer the above question?",
        "answer": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-7-2",
        "query": "What's the column header denoting the year?",
        "answer": "Theft Type",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-7-3",
        "query": "What's the column header denoting the theft type?",
        "answer": "Year",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-7-1",
        "step": "Load the raw file 2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv",
        "query": "Which file is needed to analyze the growth of fraud categories?",
        "answer": "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv",
        "answer_type": "string_approximate",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-7-2",
        "step": "Strip blank lines, detect the first valid header row, and stop reading when the file becomes sparse so only the data table is kept.",
        "query": "Which columns are present in the loaded dataset?",
        "answer": ["Year", "Theft Type", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-7-3",
        "step": "Remove commas and dollar signs, interpret K/M suffixes, and cast to numeric types whenever possible so # of Reports becomes pure numbers.",
        "query": "What are the numbers of reports in the loaded dataset?",
        "answer": [89684, 393446, 205092, 124544, 389790, 197981, 156144, 440675, 153598, 136862, 416579, 149803, 114608, 449032, 176400],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-7-4",
        "step": "Treat two columns as swapped: keep rows whose 'Theft Type' field contains the years 2020 or 2024 (so 'Theft Type' is actually the year and 'Year' is the fraud category).",
        "query": "What are the fraud categories available for each year?",
        "answer": ["Bank Account", "Credit Card", "Load or Lease"],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-7-5",
        "step": "Select only categories that have data for both 2020 and 2024 to ensure valid comparison.",
        "query": "What are the number of reports in the observations for 2020 and 2024?",
        "answer": [89684.0, 114608.0, 393446.0, 449032.0, 205092.0, 176400.0],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-7-6",
        "step": "Compute the growth_ratio column as (reports in 2024) divided by (reports in 2020) for every remaining category.",
        "query": "What are the growth ratios between 2020 and 2024 for each category? Report a list of numbers",
        "answer": [1.2779091030730119, 1.14127987068111, 0.8601018079691065],
        "answer_type": "list_approximate",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      },
      {
        "id": "legal-hard-7-7",
        "step": "Identify the category with the largest growth_ratio (idxmax) and output that category name (title-cased) as the fastest-growing fraud type between 2020 and 2024.",
        "query": "Which category has the highest growth ratio after computing the growth ratio between 2024 and 2024?",
        "answer": "Bank Account",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-hard-8",
    "query": "Are the report counts of for 'frauds and other data' in 2024 consistent for the Metropolitan area of Miami-Fort Lauderdale-West Palm Beach? Answer True or False. No explanation needed.",
    "answer": "True",
    "runtime": 1,
    "answer_type": "string_exact",
    "data_sources": [
      "State MSA Fraud and Other data/Florida.csv",
      "2024_CSN_Metropolitan_Areas_Fraud_and_Other_Reports.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-8-1",
        "query": "What files do you need to read to answer the above question?",
        "answer": [
          "2024_CSN_Top_Three_Identity_Theft_Reports_by_Year.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Fraud and Other data/Florida.csv",
          "2024_CSN_Metropolitan_Areas_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-8-1",
        "query": "What encoding do the files use?",
        "answer": "ISO-8859-1",
        "answer_type": "string_exact",
        "data_sources": [
          "State MSA Fraud and Other data/Florida.csv",
          "2024_CSN_Metropolitan_Areas_Fraud_and_Other_Reports.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-8-1",
        "step": "Load the two required data files (Florida-only MSA file and national 2024 metro report file), using \"ISO-8859-1\" encoding.",
        "query": "What are the names of the input files necessary for this question?",
        "answer": ["Florida.csv",  "2024_CSN_Metropolitan_Areas_Fraud_and_Other_Reports.csv"],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Fraud and Other data/Florida.csv",
          "2024_CSN_Metropolitan_Areas_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-8-2",
        "step": "Strip commas/whitespace, remove $ sign, convert K / M suffixed numbers to true numeric values, returns int or float, otherwise None.",
        "query": "After data cleaning, what are the numbers of reports of metro areas in Florida? Report a list of numbers.",
        "answer": [12512, 3429, 11988, 5211, 2298, 31560, 16226, 171462, 5479, 19410, 6266, 63405, 12534, 2920, 7267, 9665, 3281, 4280, 1430, 6363, 66454, 1822],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Fraud and Other data/Florida.csv"
        ]
      },
      {
        "id": "legal-hard-8-3",
        "step": "Find the first line having at least two non-empty comma-separated cells and treat it as header and keep subsequent lines until a line with <2 populated cells (cuts off footers/notes).",
        "query": "What are the column names of 2024_CSN_Metropolitan_Areas_Fraud_and_Other_Reports.csv",
        "answer": ["Rank", "Metropolitan Area", "Reports per 100K Population", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Metropolitan_Areas_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-8-4",
        "step": "Drop all non-alphanumeric characters and lower-case the string for metropolitan area names, ensuring equivalent metropolitan area names match even if punctuation or spacing differs.",
        "query": "How is the name of the target area miami fort lauderdale west palm beach ... represented in the Flrorida dataset?",
        "answer": "Miami-Fort Lauderdale-West Palm Beach, FL Metropolitan Statistical Area",
        "answer_type": "string_exact",
        "data_sources": [
          "State MSA Fraud and Other data/Florida.csv"
        ]
      },
      {
        "id": "legal-hard-8-5",
        "step": "Create two normalised target strings that represent \"Miami-Fort Lauderdale-West Palm Beach, FL Metropolitan Statistical Area\" (slightly different punctuations), select the rows in each table whose 'Metropolitan Area' value, after normalisation, equals its respective target string.",
        "query": "How many rows in each table match the target area? Answer in a list of numbers.",
        "answer": [1, 1],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Fraud and Other data/Florida.csv",
          "2024_CSN_Metropolitan_Areas_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-8-6",
        "step": "Extract '# of Reports' from both rows (and 'Reports per 100K Population' from the second file), cast to int for numeric comparison.",
        "query": "What are the values of '# of Reports' from the selected rows in both datasets?",
        "answer": [171462, 171462],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Fraud and Other data/Florida.csv",
          "2024_CSN_Metropolitan_Areas_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-8-7",
        "step": "Compare the two '# of Reports' values and print True if they are identical, False otherwise.",
        "query": "What is the outcome of comparing the '# of Reports' values from the two selected rows? Answer True or False.",
        "answer": "True",
        "answer_type": "string_exact",
        "data_sources": [
          "State MSA Fraud and Other data/Florida.csv",
          "2024_CSN_Metropolitan_Areas_Fraud_and_Other_Reports.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-easy-9",
    "query": "Between 2002 and 2024 inclusive, which year saw the greatest relative increase in total reports (Fraud, Identity Theft and Other) compared to the previous year?",
    "answer": 2002,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Report_Count.csv"
    ],
    "subtasks": [
      {
        "id": "legal-easy-9-1",
        "query": "To get the counts of reports between 2001 and 2024 inclusive, which file(s) do we need? Answer in a list of filenames.",
        "answer": [
          "2024_CSN_Report_Count.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Report_Count.csv"
        ]
      },
      {
        "id": "legal-easy-9-2",
        "query": "Read the file needed to get the counts of reports between 2001 and 2024 inclusive and compute the relative increase in total reports of each year on the previous year. Report the answer in a list of numbers in chronological order, rounding to 2 digits after decimal.",
        "answer": [
          0.69,
          0.29,
          0.21,
          0.06,
          -0.0,
          0.18,
          0.19,
          0.13,
          0.03,
          0.29,
          0.11,
          0.01,
          0.23,
          0.18,
          -0.01,
          -0.04,
          0.08,
          0.1,
          0.48,
          0.19,
          -0.137,
          0.047,
          0.17
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Report_Count.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-easy-9-1",
        "step": "Load 2024_CSN_Report_Count.csv while skipping the first two non-data rows.",
        "query": "Load 2024_CSN_Report_Count.csv, what are the column names?",
        "answer": ["Year", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Count.csv"]
      },
      {
        "id": "legal-easy-9-2",
        "step": "Drop any rows that contain null values to ensure clean calculations.",
        "query": "After data cleaning, how many data rows are left in the table from 2024_CSN_Report_Count.csv",
        "answer": 24,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Count.csv"]
      },
      {
        "id": "legal-easy-9-3",
        "step": "Cast the Year column to integer so arithmetic and indexing work correctly.",
        "query": "What are the earliest and latest years where data is available?",
        "answer": [2001, 2024],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Count.csv"]
      },
      {
        "id": "legal-easy-9-4",
        "step": "Strip commas from the '# of Reports' strings, then convert that column to integers.",
        "query": "What are the numeric values in the '# of Reports' column after data cleaning?",
        "answer": [325519, 551622, 713657, 860383, 909314, 906129, 1070447, 1261124, 1428977, 1470306, 1898543, 2115079, 2134565, 2620931, 3080378, 3060824, 2926167, 3161213, 3485938, 5165295, 6136404, 5317751, 5548815, 6471708],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Count.csv"]
      },
      {
        "id": "legal-easy-9-5",
        "step": "Compute the year-over-year difference for '# of Reports'",
        "query": "What are the year-over-year relative differences for the number of reports?",
        "answer": [0.694592327943991, 0.29374281663893026, 0.20559736680225935, 0.05687118411219189, -0.003502640452033071, 0.1813406258932227, 0.1781283893551012, 0.1330979348581107, 0.028922089018927528, 0.29125705805458185, 0.11405377702796302, 0.009212894648379565, 0.22785251327553857, 0.17529915896297918, -0.006347922235517849, -0.043993708883620884, 0.08032555899919587, 0.10272164514064697, 0.48175182691143675, 0.1880064933367794, -0.13340924098217782, 0.04345145156288815, 0.1663225391367346],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Count.csv"]
      },
      {
        "id": "legal-easy-9-6",
        "step": "Locate the row with the maximum rel_diff (idxmax) and return its Year value as the answer.",
        "query": "What year corresponds to the largest relative difference in report counts?",
        "answer": 2002,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Count.csv"]
      }
    ]
  },
  {
    "id": "legal-easy-10",
    "query": "In which years were Fraud reports at least 50% of the total reports?",
    "answer": [
      2010,
      2011,
      2012,
      2013,
      2014,
      2019
    ],
    "answer_type": "list_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Number_of_Reports_by_Type.csv"
    ],
    "subtasks": [
      {
        "id": "legal-easy-10-1",
        "query": "To study the breakdown of reports by year, which file(s) should we read? Answer in a list of filenames.",
        "answer": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-10-2",
        "query": "To read the file containing the report breakdown information correctly, how many rows do we need to drop?",
        "answer": 2,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-10-3",
        "query": "What are the numbers of total reports each year? Answer in a list of numbers in chronological order.",
        "answer": [
          325519,
          551622,
          713657,
          860383,
          909314,
          906129,
          1070447,
          1261124,
          1428977,
          1470306,
          1898543,
          2115079,
          2134565,
          2620931,
          3085154,
          3063095,
          2928227,
          3171058,
          3527200,
          5217263,
          6163234,
          5341119,
          5573059,
          6495932
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-easy-10-1",
        "step": "Load the file 2024_CSN_Number_of_Reports_by_Type.csv while skipping the first two non-data rows.",
        "query": "Load the file 2024_CSN_Number_of_Reports_by_Type.csv. What are the columns?",
        "answer": ["Year", "Fraud ", "Identity Theft ", "Other "],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-10-2",
        "step": "Drop any rows containing missing values.",
        "query": "Drop any rows containing missing values. How many data rows are left?",
        "answer": 24,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-10-3",
        "step": "For every other report-type column: remove thousands separators (commas) then cast the column to integer.",
        "query": "Clean the report count data. What are the numbers of Fraud reports?",
        "answer": [137306, 242783, 331366, 410298, 437585, 423672, 505563, 620832, 708781, 820072, 1041517, 1112693, 1159115, 1526365, 1165393, 1228865, 1310003, 1523295, 1897238, 2467103, 3041971, 2572424, 2621649, 2600678],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-10-4",
        "step": "Create a total column that is the row-wise sum of all report-type counts.",
        "query": "What are the total report counts for each year?",
        "answer": [325519, 551622, 713657, 860383, 909314, 906129, 1070447, 1261124, 1428977, 1470306, 1898543, 2115079, 2134565, 2620931, 3085154, 3063095, 2928227, 3171058, 3527200, 5217263, 6163234, 5341119, 5573059, 6495932],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-10-5",
        "step": "Compute percentage as the Fraud column divided by the total column.",
        "query": "What are the ratios of Fraud reports compared to the yearly total for each year?",
        "answer": [0.4218064076136877, 0.4401256657638745, 0.4643210954281959, 0.47687832046890744, 0.48122540728505225, 0.46756256559496495, 0.47229148196968185, 0.49228466035060786, 0.4960058839295524, 0.5577560045323898, 0.5485875221156434, 0.5260763309550139, 0.5430216460965115, 0.5823751178493444, 0.377742245605892, 0.4011840964775823, 0.44737071272138396, 0.48037437347408973, 0.5378878430483103, 0.4728730370694366, 0.4935673381864132, 0.4816264157379755, 0.47041472196867107, 0.4003548682467735],
        "answer_type": "list_approximate",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-10-6",
        "step": "Select the rows where the percentage exceeds 0.5 (i.e., Fraud reports are more than 50% of total). Return the corresponding Year values from those rows as integers and print the resulting list.",
        "query": "Which years have a fraud ratio greater than 0.5?",
        "answer": [2010, 2011, 2012, 2013, 2014, 2019],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      }
    ]
  },
  {
    "id": "legal-easy-11",
    "query": "Was there ever a year between 2001-2024 inclusive where 'Other' reports were more than half of the total reports? Answer Yes or No. No explanation needed.",
    "answer": "No",
    "answer_type": "string_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Number_of_Reports_by_Type.csv"
    ],
    "subtasks": [
      {
        "id": "legal-easy-11-1",
        "query": "To study the proportion of 'Other' reports between 2001 and 2024 inclusive, which file do we need to read? Answer in a list of filenames.",
        "answer": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-11-2",
        "query": "What are the numbers of 'Other' reports each year? Answer in a list of numbers in chronological order.",
        "answer": [
          101963,
          146862,
          167051,
          203176,
          216042,
          236243,
          305570,
          325705,
          441836,
          399160,
          577835,
          632428,
          685352,
          762021,
          1429676,
          1435874,
          1247309,
          1203425,
          980572,
          1361628,
          1686786,
          1661691,
          1914555,
          2759963
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-easy-11-1",
        "step": "Read the file 2024_CSN_Number_of_Reports_by_Type.csv while skipping the first two metadata rows.",
        "query": "Load the file 2024_CSN_Number_of_Reports_by_Type.csv. What are the columns?",
        "answer": ["Year", "Fraud ", "Identity Theft ", "Other "],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-11-2",
        "step": "Drop any rows that contain missing values.",
        "query": "Drop any rows containing missing values. How many data rows are left?",
        "answer": 24,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Number_of_Reports_by_Type.csv"
        ]
      },
      {
        "id": "legal-easy-11-3",
        "step": "For every report-type column strip out the thousands separator ',' and cast the strings to integers.",
        "query": "Clean the report count data. What are the numbers of Other reports?",
        "answer": [101963, 146862, 167051, 203176, 216042, 236243, 305570, 325705, 441836, 399160, 577835, 632428, 685352, 762021, 1429676, 1435874, 1247309, 1203425, 980572, 1361628, 1686786, 1661691, 1914555, 2759963],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-11-4",
        "step": "Do a row-wise sum of every report-type count, giving the yearly total number of reports.",
        "query": "What are the total report counts for each year?",
        "answer": [325519, 551622, 713657, 860383, 909314, 906129, 1070447, 1261124, 1428977, 1470306, 1898543, 2115079, 2134565, 2620931, 3085154, 3063095, 2928227, 3171058, 3527200, 5217263, 6163234, 5341119, 5573059, 6495932],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-11-5",
        "step": "Compute the share of 'Other' reports for each year by dividing the 'Other' count by the yearly total. What are the ratios?",
        "query": "What are the ratios of 'Other' reports compared to the yearly total for each year? Report a list of floating numbers.",
        "answer": [0.3132321001231879, 0.26623666206206426, 0.23407743495825026, 0.23614599544621406, 0.2375878959303387, 0.26071674121455113, 0.2854601862586377, 0.25826564239519667, 0.3091974188527877, 0.2714809026148298, 0.3043570780329969, 0.29900916230552144, 0.32107338029059784, 0.2907443957891299, 0.4634050682721187, 0.46876574183954467, 0.42596048735292724, 0.37950267702451357, 0.2780029485144024, 0.26098511805902824, 0.27368521136792795, 0.31111289600549996, 0.3435375437439295, 0.4248755990672316],
        "answer_type": "list_approximate",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-11-6",
        "step": "Check whether the maximum value of the percentage is greater than 0.5; if so print 'Yes', otherwise print No.",
        "query": "What is the maximum values of the ratio of Other reports? Round to 4 digits after decimal.",
        "answer": "0.4688",
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      }
    ]
  },
  {
    "id": "legal-easy-12",
    "query": "What is the minimum number of report categories that collectively account for at least 50% of reports in 2024?",
    "answer": 3,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Report_Categories.csv"
    ],
    "subtasks": [
      {
        "id": "legal-easy-12-subtask-1",
        "query": "What is the file containing report categories information for 2024? Answer in a list of filenames.",
        "answer": [
          "2024_CSN_Report_Categories.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Report_Categories.csv"
        ]
      },
      {
        "id": "legal-easy-12-subtask-2",
        "query": "What percentage (in percentage, to 2 decimal places) do the 2 largest categories in 2024 collectivly account for? Answer in one number.",
        "answer": 38.45,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Categories.csv"
        ]
      },
      {
        "id": "legal-easy-12-subtask-3",
        "query": "What percentage (in percentage, to 2 decimal places) do the 3 largest categories in 2024 collectivly account for? Answer in one number.",
        "answer": 51.52,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Categories.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-easy-12-1",
        "step": "Load the 2024_CSN_Report_Categories.csv file while skipping the first two header rows and using unicode-escape encoding.",
        "query": "Load 2024_CSN_Report_Categories.csv. What are the column names?",
        "answer": ["Rank", "Category", " # of Reports ", "Percentage"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-12-2",
        "step": "Drop any rows that contain missing values.",
        "query": "Drop any rows that contain missing values. How many rows are left?",
        "answer": 29,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-12-3",
        "step": "Clean the 'Percentage' column: remove the percent sign, convert the values to float, and divide by 100 so the column represents fractions.",
        "query": "Convert the Percentage column in the report by categories table to fractions. What are the fractions?",
        "answer": [0.2091, 0.1754, 0.1307, 0.059500000000000004, 0.054299999999999994, 0.0338, 0.0304, 0.023399999999999997, 0.020099999999999996, 0.0195, 0.0184, 0.0178, 0.0172, 0.015, 0.0143, 0.0127, 0.009000000000000001, 0.0053, 0.0052, 0.0043, 0.004, 0.0038, 0.0029, 0.0017000000000000001, 0.0008, 0.0008, 0.0005, 0.0003, 0.0002],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-12-4",
        "step": "Convert the 'Rank' column to integer type.",
        "query": "Convert the 'Rank' column to integer type. What is the second smallest rank?",
        "answer": 2,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-12-5",
        "step": "Sort the dataframe in descending order of the cleaned 'Percentage' so the most frequent categories appear first.",
        "query": "What is the most frequent category based on the cleaned 'Percentage'?",
        "answer": "Credit Bureaus and Information Furnishers",
        "answer_type": "string_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-12-6",
        "step": "Compute a running cumulative sum of the sorted 'Percentage' values.",
        "query": "What are the running cumulative fractions after sorting by 'Percentage'?",
        "answer": [0.2091, 0.3845, 0.5152, 0.5747, 0.629, 0.6628000000000001, 0.6932, 0.7166, 0.7367, 0.7562, 0.7746, 0.7924, 0.8096, 0.8246, 0.8389, 0.8516, 0.8606, 0.8659, 0.8711, 0.8754, 0.8794, 0.8832, 0.8861, 0.8878, 0.8886000000000001, 0.8894000000000001, 0.8899, 0.8902, 0.8904],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-12-7",
        "step": "Locate the first index where this cumulative sum exceeds 0.5 (50% of all reports) and output its 'Rank' value. This rank equals the minimum number of top categories needed to reach at least half of the total reports.",
        "query": "What is the first 'Rank' value whose cumulative percentage exceeds 0.5?",
        "answer": 3,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      }
    ]
  },
  {
    "id": "legal-easy-13",
    "query": "In 2024, what was the ratio of reports between the most frequent and the least frequent category (rounded to two decimal places)?",
    "answer": 1097.47,
    "runtime": 1,
    "answer_type": "numeric_exact",
    "data_sources": [
      "2024_CSN_Report_Categories.csv"
    ],
    "subtasks": [
      {
        "id": "legal-easy-13-1",
        "query": "When we read the file containing report categories information for 2024, how many rows do we need to skip?",
        "answer": 2,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Categories.csv"
        ]
      },
      {
        "id": "legal-easy-13-2",
        "query": "In 2024, what were the numbers of reports the most frequent and the least frequent category? Answer in a list of 2 numbers.",
        "answer": [
          1353175,
          1233
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Report_Categories.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-easy-13-1",
        "step": "Load the report-category counts from 2024_CSN_Report_Categories.csv (skip first 2 header rows, handle Unicode escapes).",
        "query": "Load 2024_CSN_Report_Categories.csv. What are the column names?",
        "answer": ["Rank", "Category", " # of Reports ", "Percentage"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-13-2",
        "step": "Remove any rows that contain missing values.",
        "query": "Drop any rows that contain missing values. How many rows are left?",
        "answer": 29,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-13-3",
        "step": "Clean the '# of Reports' field: strip thousand-separator commas and convert the column to integers.",
        "query": "Clean the '# of Reports field'. What are the numeric values of numbers of reports?",
        "answer": [1353175, 1135291, 845806, 384946, 351543, 218736, 197015, 151412, 130075, 126368, 118960, 115473, 111024, 97350, 92520, 81925, 58347, 34159, 33360, 27557, 25813, 24311, 18663, 11019, 5435, 5317, 3525, 2229, 1233],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-13-4",
        "step": "Determine the maximum and minimum report counts across all categories.",
        "query": "What are the largest report count and the smallest report count?",
        "answer": [1353175, 1233],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-13-5",
        "step": "Compute the ratio max/min and round the result to two decimal places before output.",
        "query": "What is the ratio of the largest report count to the smallest report count, rounded to two decimal places?",
        "answer": 1233,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      }
    ]
  },
  {
    "id": "legal-hard-14",
    "query": "What are the top 5 distinct Metropolitan areas in New England that have the most Identity Theft reports in 2024?",
    "answer": [
      "Boston-Cambridge-Newton, MA-NH Metropolitan Statistical Area",
      "Providence-Warwick, RI-MA Metropolitan Statistical Area",
      "Hartford-West Hartford-East Hartford, CT Metropolitan Statistical Area",
      "Bridgeport-Stamford-Danbury, CT Metropolitan Statistical Area",
      "Worcester, MA Metropolitan Statistical Area"
    ],
    "answer_type": "list_exact",
    "runtime": 1,
    "data_sources": [
      "State MSA Identity Theft data/*.csv",
      "new_england_states.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-14-1",
        "query": "Which states are in New England?",
        "answer": [
          "Connecticut",
          "Maine",
          "Massachusetts",
          "New Hampshire",
          "Rhode Island",
          "Vermont"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "new_england_states.csv"
        ]
      },
      {
        "id": "legal-hard-14-2",
        "query": "Which folder are we reading the relevant files from? Ignore any parent folders and report only the base directory.",
        "answer": "State MSA Identity Theft data",
        "answer_type": "string_approximate",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      },
      {
        "id": "legal-hard-14-3",
        "query": "List all the Metropolitan areas in New England",
        "answer": [
          "Bridgeport-Stamford-Danbury, CT Metropolitan Statistical Area",
          "Hartford-West Hartford-East Hartford, CT Metropolitan Statistical Area",
          "New Haven, CT Metropolitan Statistical Area",
          "Norwich-New London-Willimantic, CT Metropolitan Statistical Area",
          "Torrington, CT Micropolitan Statistical Area",
          "Waterbury-Shelton, CT Metropolitan Statistical Area",
          "Augusta-Waterville, ME Micropolitan Statistical Area",
          "Bangor, ME Metropolitan Statistical Area",
          "Lewiston-Auburn, ME Metropolitan Statistical Area",
          "Portland-South Portland, ME Metropolitan Statistical Area",
          "Amherst Town-Northampton, MA Metropolitan Statistical Area",
          "Barnstable Town, MA Metropolitan Statistical Area",
          "Boston-Cambridge-Newton, MA-NH Metropolitan Statistical Area",
          "Pittsfield, MA Metropolitan Statistical Area",
          "Providence-Warwick, RI-MA Metropolitan Statistical Area",
          "Springfield, MA Metropolitan Statistical Area",
          "Worcester, MA Metropolitan Statistical Area",
          "Boston-Cambridge-Newton, MA-NH Metropolitan Statistical Area",
          "Concord, NH Micropolitan Statistical Area",
          "Lebanon-Claremont, NH-VT Micropolitan Statistical Area",
          "Manchester-Nashua, NH Metropolitan Statistical Area",
          "Providence-Warwick, RI-MA Metropolitan Statistical Area",
          "Burlington-South Burlington, VT Metropolitan Statistical Area",
          "Lebanon-Claremont, NH-VT Micropolitan Statistical Area"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "new_england_states.csv",
          "State MSA Identity Theft data/*.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-14-1",
        "step": "Load new_england_states.csv to obtain the list of New-England state names.",
        "query": "Which state names are in New England and will be used for further data loading?",
        "answer": [
          "Connecticut",
          "Maine",
          "Massachusetts",
          "New Hampshire",
          "Rhode Island",
          "Vermont"
        ],
        "answer_type": "list_exact",
        "data_sources": ["new_england_states.csv"]
      },
      {
        "id": "legal-hard-14-2",
        "step": "Iterate over each state name, strip spaces, and read its corresponding State MSA Identity Theft data/<State>.csv file, skipping the first two header rows and dropping rows that are entirely NaN.",
        "query": "How many state specific files do we read and how many columns are in each file?",
        "answer": [6, 2],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv",
          "new_england_states.csv"
        ]
      },
      {
        "id": "legal-hard-14-3",
        "step": "Clean the # of Reports column by removing thousands separators (commas) and casting the values to integers.",
        "query": "What are the cleaned values for the # of Reports column of the combined data>",
        "answer": [2571, 2613, 1414, 498, 194, 1061, 147, 174, 139, 806, 372, 550, 19929, 246, 5422, 1400, 2561, 19929, 198, 242, 709, 5422, 258, 242],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv",
          "new_england_states.csv"
        ]
      },
      {
        "id": "legal-hard-14-4",
        "step": "Sort the combined dataframe in descending order of # of Reports.",
        "query": "Sort the combined dataframe in descending order of # of Reports.What is metro area with the most # of Reports?",
        "answer": "Boston-Cambridge-Newton, MA-NH Metropolitan Statistical Area",
        "answer_type": "string_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv",
          "new_england_states.csv"
        ]
      },
      {
        "id": "legal-hard-14-5",
        "step": "Remove duplicate Metropolitan Area entries, keeping the first (highest-report) occurrence for each metro area.",
        "query": "What are the unique metropolitan areas after removing duplicates?",
        "answer": ["Boston-Cambridge-Newton, MA-NH Metropolitan Statistical Area", "Providence-Warwick, RI-MA Metropolitan Statistical Area", "Hartford-West Hartford-East Hartford, CT Metropolitan Statistical Area", "Bridgeport-Stamford-Danbury, CT Metropolitan Statistical Area", "Worcester, MA Metropolitan Statistical Area", "New Haven, CT Metropolitan Statistical Area", "Springfield, MA Metropolitan Statistical Area", "Waterbury-Shelton, CT Metropolitan Statistical Area", "Portland-South Portland, ME Metropolitan Statistical Area", "Manchester-Nashua, NH Metropolitan Statistical Area", "Barnstable Town, MA Metropolitan Statistical Area", "Norwich-New London-Willimantic, CT Metropolitan Statistical Area", "Amherst Town-Northampton, MA Metropolitan Statistical Area", "Burlington-South Burlington, VT Metropolitan Statistical Area", "Pittsfield, MA Metropolitan Statistical Area", "Lebanon-Claremont, NH-VT Micropolitan Statistical Area", "Concord, NH Micropolitan Statistical Area", "Torrington, CT Micropolitan Statistical Area", "Bangor, ME Metropolitan Statistical Area", "Augusta-Waterville, ME Micropolitan Statistical Area", "Lewiston-Auburn, ME Metropolitan Statistical Area"],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv",
          "new_england_states.csv"
        ]
      },
      {
        "id": "legal-hard-14-6",
        "step": "Select the first five rows after de-duplication and output their Metropolitan Area values as the top-5 list.",
        "query": "What are the names of the top five metropolitan areas with the highest reported cases?",
        "answer": ["Boston-Cambridge-Newton, MA-NH Metropolitan Statistical Area", "Providence-Warwick, RI-MA Metropolitan Statistical Area", "Hartford-West Hartford-East Hartford, CT Metropolitan Statistical Area", "Bridgeport-Stamford-Danbury, CT Metropolitan Statistical Area", "Worcester, MA Metropolitan Statistical Area"],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv",
          "new_england_states.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-hard-15",
    "query": "How many total Identity Theft reports were there in 2024 from cross-state Metropolitan Statistical Areas?",
    "answer": 593524,
    "runtime": 1,
    "answer_type": "numeric_exact",
    "data_sources": [
      "State MSA Identity Theft data/*.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-15-1",
        "query": "What is the column name of number of Identity Theft Reports in the data?",
        "answer": "# of Reports",
        "answer_type": "string_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      },
      {
        "id": "legal-hard-15-2",
        "query": "List all the cross-state Metropolitan Statistical Areas.",
        "answer": [
          "Augusta-Richmond County, GA-SC Metropolitan Statistical Area",
          "Chattanooga, TN-GA Metropolitan Statistical Area",
          "Columbus, GA-AL Metropolitan Statistical Area",
          "LaGrange, GA-AL Micropolitan Statistical Area",
          "Boston-Cambridge-Newton, MA-NH Metropolitan Statistical Area",
          "Lebanon-Claremont, NH-VT Micropolitan Statistical Area",
          "Duluth, MN-WI Metropolitan Statistical Area",
          "La Crosse-Onalaska, WI-MN Metropolitan Statistical Area",
          "Minneapolis-St. Paul-Bloomington, MN-WI Metropolitan Statistical Area",
          "Duluth, MN-WI Metropolitan Statistical Area",
          "Fargo, ND-MN Metropolitan Statistical Area",
          "Grand Forks, ND-MN Metropolitan Statistical Area",
          "La Crosse-Onalaska, WI-MN Metropolitan Statistical Area",
          "Minneapolis-St. Paul-Bloomington, MN-WI Metropolitan Statistical Area",
          "Sioux Falls, SD-MN Metropolitan Statistical Area",
          "Hagerstown-Martinsburg, MD-WV Metropolitan Statistical Area",
          "Philadelphia-Camden-Wilmington, PA-NJ-DE-MD Metropolitan Statistical Area",
          "Washington-Arlington-Alexandria, DC-VA-MD-WV Metropolitan Statistical Area",
          "Allentown-Bethlehem-Easton, PA-NJ Metropolitan Statistical Area",
          "Philadelphia-Camden-Wilmington, PA-NJ-DE-MD Metropolitan Statistical Area",
          "Texarkana, TX-AR Metropolitan Statistical Area",
          "South Bend-Mishawaka, IN-MI Metropolitan Statistical Area",
          "Chattanooga, TN-GA Metropolitan Statistical Area",
          "Clarksville, TN-KY Metropolitan Statistical Area",
          "Kingsport-Bristol, TN-VA Metropolitan Statistical Area",
          "Memphis, TN-MS-AR Metropolitan Statistical Area",
          "Fort Smith, AR-OK Metropolitan Statistical Area",
          "Memphis, TN-MS-AR Metropolitan Statistical Area",
          "Texarkana, TX-AR Metropolitan Statistical Area",
          "Cincinnati, OH-KY-IN Metropolitan Statistical Area",
          "Huntington-Ashland, WV-KY-OH Metropolitan Statistical Area",
          "Weirton-Steubenville, WV-OH Metropolitan Statistical Area",
          "Wheeling, WV-OH Metropolitan Statistical Area",
          "Omaha, NE-IA Metropolitan Statistical Area",
          "Sioux City, IA-NE-SD Metropolitan Statistical Area",
          "Chicago-Naperville-Elgin, IL-IN Metropolitan Statistical Area",
          "Cincinnati, OH-KY-IN Metropolitan Statistical Area",
          "Louisville/Jefferson County, KY-IN Metropolitan Statistical Area",
          "South Bend-Mishawaka, IN-MI Metropolitan Statistical Area",
          "New York-Newark-Jersey City, NY-NJ Metropolitan Statistical Area",
          "Augusta-Richmond County, GA-SC Metropolitan Statistical Area",
          "Charlotte-Concord-Gastonia, NC-SC Metropolitan Statistical Area",
          "Memphis, TN-MS-AR Metropolitan Statistical Area",
          "Washington-Arlington-Alexandria, DC-VA-MD-WV Metropolitan Statistical Area",
          "Charlotte-Concord-Gastonia, NC-SC Metropolitan Statistical Area",
          "Virginia Beach-Chesapeake-Norfolk, VA-NC Metropolitan Statistical Area",
          "Fort Smith, AR-OK Metropolitan Statistical Area",
          "Hagerstown-Martinsburg, MD-WV Metropolitan Statistical Area",
          "Huntington-Ashland, WV-KY-OH Metropolitan Statistical Area",
          "Washington-Arlington-Alexandria, DC-VA-MD-WV Metropolitan Statistical Area",
          "Weirton-Steubenville, WV-OH Metropolitan Statistical Area",
          "Wheeling, WV-OH Metropolitan Statistical Area",
          "Winchester, VA-WV Metropolitan Statistical Area",
          "Logan, UT-ID Metropolitan Statistical Area",
          "Fargo, ND-MN Metropolitan Statistical Area",
          "Grand Forks, ND-MN Metropolitan Statistical Area",
          "Kingsport-Bristol, TN-VA Metropolitan Statistical Area",
          "Virginia Beach-Chesapeake-Norfolk, VA-NC Metropolitan Statistical Area",
          "Washington-Arlington-Alexandria, DC-VA-MD-WV Metropolitan Statistical Area",
          "Winchester, VA-WV Metropolitan Statistical Area",
          "Philadelphia-Camden-Wilmington, PA-NJ-DE-MD Metropolitan Statistical Area",
          "Cincinnati, OH-KY-IN Metropolitan Statistical Area",
          "Clarksville, TN-KY Metropolitan Statistical Area",
          "Huntington-Ashland, WV-KY-OH Metropolitan Statistical Area",
          "Louisville/Jefferson County, KY-IN Metropolitan Statistical Area",
          "Paducah, KY-IL Metropolitan Statistical Area",
          "Boston-Cambridge-Newton, MA-NH Metropolitan Statistical Area",
          "Providence-Warwick, RI-MA Metropolitan Statistical Area",
          "Allentown-Bethlehem-Easton, PA-NJ Metropolitan Statistical Area",
          "New York-Newark-Jersey City, NY-NJ Metropolitan Statistical Area",
          "Philadelphia-Camden-Wilmington, PA-NJ-DE-MD Metropolitan Statistical Area",
          "Columbus, GA-AL Metropolitan Statistical Area",
          "LaGrange, GA-AL Micropolitan Statistical Area",
          "Providence-Warwick, RI-MA Metropolitan Statistical Area",
          "Chicago-Naperville-Elgin, IL-IN Metropolitan Statistical Area",
          "Davenport-Moline-Rock Island, IA-IL Metropolitan Statistical Area",
          "Paducah, KY-IL Metropolitan Statistical Area",
          "St. Louis, MO-IL Metropolitan Statistical Area",
          "Logan, UT-ID Metropolitan Statistical Area",
          "Portland-Vancouver-Hillsboro, OR-WA Metropolitan Statistical Area",
          "Davenport-Moline-Rock Island, IA-IL Metropolitan Statistical Area",
          "Omaha, NE-IA Metropolitan Statistical Area",
          "Sioux City, IA-NE-SD Metropolitan Statistical Area",
          "Lebanon-Claremont, NH-VT Micropolitan Statistical Area",
          "Joplin, MO-KS Metropolitan Statistical Area",
          "Kansas City, MO-KS Metropolitan Statistical Area",
          "St. Joseph, MO-KS Metropolitan Statistical Area",
          "Portland-Vancouver-Hillsboro, OR-WA Metropolitan Statistical Area",
          "Joplin, MO-KS Metropolitan Statistical Area",
          "Kansas City, MO-KS Metropolitan Statistical Area",
          "St. Joseph, MO-KS Metropolitan Statistical Area",
          "St. Louis, MO-IL Metropolitan Statistical Area",
          "Sioux City, IA-NE-SD Metropolitan Statistical Area",
          "Sioux Falls, SD-MN Metropolitan Statistical Area"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-15-1",
        "step": "Loop over every CSV in 'State MSA Identity Theft data', read each with skiprows=2 and drop rows that are all-NaN.",
        "query": "Loop over every CSV in 'State MSA Identity Theft data. What are the column names of these data?",
        "answer": ["Metropolitan Area", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      },
      {
        "id": "legal-hard-15-2",
        "step": "From the 'Metropolitan Area' field, extract the state portion (text after the comma) and keep only the first token.",
        "query": "What are the unique extracted state identifiers from the 'Metropolitan Area' column?",
        "answer": ["GA", "GA-SC", "TN-GA", "GA-AL", "WY", "MA-NH", "NH", "NH-VT", "WI", "MN-WI", "WI-MN", "ND-MN", "MN", "SD-MN", "MD", "MD-WV", "PA-NJ-DE-MD", "DC-VA-MD-WV", "PA-NJ", "PA", "TX", "TX-AR", "FL", "MI", "IN-MI", "HI", "TN-KY", "TN", "TN-VA", "TN-MS-AR", "AR", "AR-OK", "OH", "OH-KY-IN", "WV-KY-OH", "WV-OH", "NE", "NE-IA", "IA-NE-SD", "MT", "IN", "IL-IN", "KY-IN", "NY", "NY-NJ", "SC", "NC-SC", "MS", "NC", "VA-NC", "PR", "CT", "OK", "WV", "VA-WV", "CO", "ME", "LA", "UT-ID", "UT", "ND", "VA", "DE", "KY", "KY-IL", "MA", "RI-MA", "NJ", "AL", "AZ", "CA", "NV", "AK", "IL", "IA-IL", "MO-IL", "ID", "OR", "OR-WA", "IA", "VT", "MO-KS", "KS", "WA", "MO", "NM", "SD"],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      },
      {
        "id": "legal-hard-15-3",
        "step": "Mark an MSA as cross-state possibly by checking whether the extracted state code string contains a hyphen ('-').",
        "query": "How many cross-state MSAs are there?",
        "answer": 94,
        "answer_type": "numeric_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      },
      {
        "id": "legal-hard-15-4",
        "step": "Clean the '# of Reports' column: remove thousands commas and convert the values to integer type.",
        "query": "What are the '# of Reports' values of all metro areas after data cleaning? Answer with a list of numbers.",
        "answer": [606, 386, 42616, 2113, 217, 1135, 1302, 176, 384, 453, 1079, 1801, 437, 669, 140, 19929, 198, 242, 709, 276, 269, 159, 103, 350, 242, 250, 152, 1123, 3882, 5552, 207, 306, 118, 109, 118, 269, 378, 100, 152, 103, 5552, 233, 352, 178, 8940, 502, 427, 28438, 239, 19689, 2414, 107, 185, 608, 438, 119, 1236, 141, 171, 805, 243, 28438, 4571, 253, 1151, 1648, 172, 182, 165, 895, 327, 535, 7473, 1487, 868, 490, 967, 37114, 1950, 41668, 2340, 442, 722, 768, 1867, 707, 782, 235, 7889, 298, 317, 544, 701, 375, 2727, 586, 1998, 783, 290, 5986, 3598, 55457, 1402, 2770, 1108, 15099, 1847, 606, 1166, 2051, 452, 518, 235, 1417, 13953, 236, 771, 196, 119, 15687, 932, 1742, 95, 206, 474, 706, 208, 291, 240, 280, 475, 178, 229, 240, 1433, 1135, 730, 201, 165, 314, 251, 342, 1407, 5502, 194, 4470, 796, 302, 172, 263, 2641, 5502, 317, 1720, 723, 4477, 7115, 6805, 1984, 405, 124, 164, 138, 226, 300, 1163, 130, 131, 127, 865, 423, 1580, 132, 279, 217, 166, 167, 205, 37486, 4477, 228, 397, 732, 6570, 275, 2653, 166, 134, 475, 203, 1719, 382, 2253, 132, 119, 157, 320, 1959, 100, 67819, 2586, 1038, 432, 176, 2113, 2790, 10144, 2758, 640, 2525, 448, 944, 972, 392, 940, 302, 1873, 5502, 236, 19689, 368, 813, 320, 10144, 1348, 1268, 251, 1880, 592, 532, 336, 361, 196, 162, 4150, 382, 218, 4689, 855, 1279, 122, 83, 76, 193, 1042, 2571, 2613, 1414, 498, 194, 1061, 302, 225, 2968, 1935, 123, 321, 502, 405, 143, 19689, 130, 131, 191, 677, 1692, 7056, 588, 234, 641, 298, 147, 174, 139, 806, 289, 4604, 401, 430, 1168, 505, 640, 4268, 1334, 757, 168, 895, 1042, 2212, 372, 153, 378, 100, 155, 300, 152, 155, 342, 429, 3637, 488, 146, 4689, 19689, 191, 663, 28438, 525, 212, 4477, 730, 164, 181, 405, 960, 2653, 120, 184, 145, 372, 550, 19929, 246, 5422, 1400, 2561, 2414, 872, 67819, 28438, 1112, 367, 264, 451, 3968, 1302, 467, 260, 314, 223, 181, 1459, 453, 1355, 1491, 902, 206, 335, 16677, 427, 141, 221, 2146, 309, 5422, 2525, 382, 231, 180, 3235, 301, 71624, 482, 1082, 214, 1837, 299, 15889, 6483, 555, 10260, 11641, 4515, 370, 385, 677, 681, 2048, 136, 1278, 1186, 306, 13075, 1069, 464, 318, 611, 37486, 620, 186, 419, 171, 184, 572, 968, 455, 7242, 1173, 224, 242, 168, 129, 184, 374, 605, 345, 4548, 124, 653, 138, 388, 620, 1147, 255, 1580, 132, 183, 258, 242, 240, 4247, 190, 235, 181, 416, 1085, 350, 370, 385, 135, 110, 146, 525, 4548, 7838, 1063, 132, 249, 295, 152, 240, 4247, 703, 181, 7242, 1563, 109, 430, 192, 166, 132, 352],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      },
      {
        "id": "legal-hard-15-5",
        "step": "Filter the cross-state rows and sum their '# of Reports' values to obtain the total cross-state Identity Theft reports for 2024.",
        "query": "What is the final numeric result of total the  cross-state Identity Theft reports for 2024",
        "answer": 593524,
        "answer_type": "numeric_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-hard-16",
    "query": "Among states with at least two metropolitan areas, considering each multi-state metropolitan area separately in each state it belongs to, which state has the highest concentration of identity theft reports in a single metropolitan area?",
    "answer": "Delaware",
    "runtime": 1,
    "answer_type": "string_exact",
    "data_sources": [
      "State MSA Identity Theft data/*.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-16-1",
        "query": "List all states with at least two metropolitan areas.",
        "answer": [
          "Georgia",
          "NewHampshire",
          "Wisconsin",
          "Minnesota",
          "Maryland",
          "Pennsylvania",
          "Texas",
          "Florida",
          "Michigan",
          "Hawaii",
          "Tennessee",
          "Arkansas",
          "Ohio",
          "Nebraska",
          "Montana",
          "Indiana",
          "NewYork",
          "SouthCarolina",
          "Mississippi",
          "NorthCarolina",
          "PuertoRico",
          "Connecticut",
          "Oklahoma",
          "WestVirginia",
          "Colorado",
          "Maine",
          "Louisiana",
          "Utah",
          "NorthDakota",
          "Virginia",
          "Delaware",
          "Kentucky",
          "Massachusetts",
          "NewJersey",
          "Alabama",
          "Arizona",
          "California",
          "Nevada",
          "Illinois",
          "Idaho",
          "Oregon",
          "Iowa",
          "Vermont",
          "Kansas",
          "Washington",
          "Missouri",
          "NewMexico",
          "SouthDakota"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      },
      {
        "id": "legal-hard-16-2",
        "query": "What is the maximum concentration of Identity Theft reports of one metropolitan area compared to its state in states with more than one metropolitan areas? Report a floating number rounded to 2 digits after decimal.",
        "answer": 0.96,
        "answer_type": "numeric_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-16-1",
        "step": "Read every CSV inside 'State MSA Identity Theft data', skipping the two-row header, drop NAs, and add a column of state name extracted from the filename so each metro entry is tagged with its state.",
        "query": "How many rows are there in total across all states?",
        "answer": 452,
        "answer_type": "numeric_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      },
      {
        "id": "legal-hard-16-2",
        "step": "Clean the '# of Reports' column by stripping comma thousands separators and converting the values to integers.",
        "query": "What are all the '# of Reports' values? Answer with a list of numbers.",
        "answer": [606, 386, 42616, 2113, 217, 1135, 1302, 176, 384, 453, 1079, 1801, 437, 669, 140, 19929, 198, 242, 709, 276, 269, 159, 103, 350, 242, 250, 152, 1123, 3882, 5552, 207, 306, 118, 109, 118, 269, 378, 100, 152, 103, 5552, 233, 352, 178, 8940, 502, 427, 28438, 239, 19689, 2414, 107, 185, 608, 438, 119, 1236, 141, 171, 805, 243, 28438, 4571, 253, 1151, 1648, 172, 182, 165, 895, 327, 535, 7473, 1487, 868, 490, 967, 37114, 1950, 41668, 2340, 442, 722, 768, 1867, 707, 782, 235, 7889, 298, 317, 544, 701, 375, 2727, 586, 1998, 783, 290, 5986, 3598, 55457, 1402, 2770, 1108, 15099, 1847, 606, 1166, 2051, 452, 518, 235, 1417, 13953, 236, 771, 196, 119, 15687, 932, 1742, 95, 206, 474, 706, 208, 291, 240, 280, 475, 178, 229, 240, 1433, 1135, 730, 201, 165, 314, 251, 342, 1407, 5502, 194, 4470, 796, 302, 172, 263, 2641, 5502, 317, 1720, 723, 4477, 7115, 6805, 1984, 405, 124, 164, 138, 226, 300, 1163, 130, 131, 127, 865, 423, 1580, 132, 279, 217, 166, 167, 205, 37486, 4477, 228, 397, 732, 6570, 275, 2653, 166, 134, 475, 203, 1719, 382, 2253, 132, 119, 157, 320, 1959, 100, 67819, 2586, 1038, 432, 176, 2113, 2790, 10144, 2758, 640, 2525, 448, 944, 972, 392, 940, 302, 1873, 5502, 236, 19689, 368, 813, 320, 10144, 1348, 1268, 251, 1880, 592, 532, 336, 361, 196, 162, 4150, 382, 218, 4689, 855, 1279, 122, 83, 76, 193, 1042, 2571, 2613, 1414, 498, 194, 1061, 302, 225, 2968, 1935, 123, 321, 502, 405, 143, 19689, 130, 131, 191, 677, 1692, 7056, 588, 234, 641, 298, 147, 174, 139, 806, 289, 4604, 401, 430, 1168, 505, 640, 4268, 1334, 757, 168, 895, 1042, 2212, 372, 153, 378, 100, 155, 300, 152, 155, 342, 429, 3637, 488, 146, 4689, 19689, 191, 663, 28438, 525, 212, 4477, 730, 164, 181, 405, 960, 2653, 120, 184, 145, 372, 550, 19929, 246, 5422, 1400, 2561, 2414, 872, 67819, 28438, 1112, 367, 264, 451, 3968, 1302, 467, 260, 314, 223, 181, 1459, 453, 1355, 1491, 902, 206, 335, 16677, 427, 141, 221, 2146, 309, 5422, 2525, 382, 231, 180, 3235, 301, 71624, 482, 1082, 214, 1837, 299, 15889, 6483, 555, 10260, 11641, 4515, 370, 385, 677, 681, 2048, 136, 1278, 1186, 306, 13075, 1069, 464, 318, 611, 37486, 620, 186, 419, 171, 184, 572, 968, 455, 7242, 1173, 224, 242, 168, 129, 184, 374, 605, 345, 4548, 124, 653, 138, 388, 620, 1147, 255, 1580, 132, 183, 258, 242, 240, 4247, 190, 235, 181, 416, 1085, 350, 370, 385, 135, 110, 146, 525, 4548, 7838, 1063, 132, 249, 295, 152, 240, 4247, 703, 181, 7242, 1563, 109, 430, 192, 166, 132, 352],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      },
      {
        "id": "legal-hard-16-3",
        "step": "Filter the combined data to keep only those states that have more than one metropolitan-area record.",
        "query": "Filter the combined data to keep only those states that have more than one metropolitan-area record. After filtering, how many metor rows are lef in the data?",
        "answer": 448,
        "answer_type": "numeric_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      },
      {
        "id": "legal-hard-16-4",
        "step": "Within each remaining state, compute the share of identity-theft reports contributed by each metro: fraction_of_state = # of Reports / (state-level total # of Reports).",
        "query": "Within each remaining state, compute the share of identity-theft reports contributed by each metro: fraction_of_state = # of Reports / (state-level total # of Reports). What are these fractions? Report a list of numbers.",
        "answer": [0.011353842694945104, 0.007231985610971634, 0.7984411885936973, 0.039588563720163374, 0.004065649941919287, 0.021265035410499494, 0.02439389965151572, 0.0032974856671787764, 0.007194514182935511, 0.008487278450181737, 0.020215835425488066, 0.03374302094652827, 0.008187507025892757, 0.012534192678082963, 0.9454881867349844, 0.009393680614859094, 0.011481165195938893, 0.03363696745421767, 0.020883777239709442, 0.02035411622276029, 0.01203087167070218, 0.007793583535108959, 0.026483050847457626, 0.018311138014527845, 0.018916464891041162, 0.011501210653753027, 0.0849727602905569, 0.2937348668280872, 0.42009685230024213, 0.015662832929782083, 0.02315375302663438, 0.008928571428571428, 0.008247578692493946, 0.008928571428571428, 0.03676370097034304, 0.05166051660516605, 0.013666803334700014, 0.02077354106874402, 0.014076807434741014, 0.7587809211425448, 0.03184365176985103, 0.04810714773814405, 0.024326909935766024, 0.1535159268481154, 0.008620245556795742, 0.00733236026444578, 0.48833175925130934, 0.004104061131621877, 0.3380956469477119, 0.05493605206863593, 0.0024350279914432662, 0.004210095125392563, 0.013836420736425287, 0.009967684675253743, 0.002708115242820081, 0.028127986891811934, 0.003208775203677575, 0.0038914933321196124, 0.018319603113194666, 0.005530016840380502, 0.6471712712211551, 0.10402348550361841, 0.0057575895498611805, 0.02619361886122616, 0.037503982522415914, 0.00391425060306768, 0.004141823312548359, 0.003754949706431205, 0.020367757498520777, 0.002949506611585157, 0.00482564537369437, 0.06740569696751032, 0.01341258816950192, 0.007829271372648062, 0.004419749968430357, 0.00872224126422889, 0.3347644904659679, 0.01758880089477387, 0.375841105478686, 0.021106561073728644, 0.003986794869482078, 0.0065123662800137105, 0.006927281583172479, 0.016840149369509137, 0.0063770678115923725, 0.00705356015369906, 0.0021196760052676206, 0.07115797449172875, 0.002687929572637238, 0.0028593076326375987, 0.004906824454747172, 0.006322948424223838, 0.0033824617105334366, 0.023861399133744587, 0.005127532047075294, 0.017482609266307913, 0.006851292820580128, 0.002537515859474122, 0.052377827361421006, 0.03148269676685479, 0.4852517828236427, 0.012267576672354202, 0.02423765148532178, 0.009695060594128713, 0.13211707573172332, 0.016161351008443802, 0.005302533140832131, 0.010202563766023538, 0.01794636216476353, 0.003955024718904493, 0.004532528328302052, 0.0020562628516428228, 0.01239882749267183, 0.12208951305945662, 0.0020650129063306648, 0.034115044247787614, 0.008672566371681416, 0.005265486725663716, 0.6941150442477876, 0.04123893805309734, 0.07707964601769912, 0.0042035398230088495, 0.00911504424778761, 0.02097345132743363, 0.031238938053097347, 0.009203539823008849, 0.012876106194690266, 0.010619469026548672, 0.012389380530973451, 0.02101769911504425, 0.007876106194690265, 0.12039957939011567, 0.12618296529968454, 0.7534174553101998, 0.07715315070355516, 0.04962273128951125, 0.013663245190673646, 0.011216096798314187, 0.021344572088913057, 0.017062062402284004, 0.023247909727414858, 0.09564271633471552, 0.374005845965604, 0.013187410781048195, 0.3038542587179662, 0.07965575903132192, 0.030221154808365857, 0.017212048433903733, 0.02631842289602722, 0.26428499949964973, 0.5505854097868508, 0.031722205543880715, 0.06466894762567207, 0.027183516938000526, 0.16832725495356618, 0.26751137346317255, 0.25585592360040604, 0.07459487912170545, 0.015227281272323947, 0.004662179945106591, 0.006166108959657104, 0.005188555100199271, 0.0084971989322104, 0.01127946760912885, 0.04372673609805617, 0.004887769297289168, 0.00492536752265293, 0.004774974621197879, 0.03252246493965485, 0.19812646370023418, 0.7400468384074942, 0.061826697892271666, 0.3365500603136309, 0.2617611580217129, 0.20024125452352232, 0.2014475271411339, 0.003796225995814892, 0.6941723301420344, 0.08290587211347938, 0.004222144034369734, 0.007351715708968353, 0.013555304531397567, 0.12166441362196996, 0.005092498287068758, 0.04912871983852151, 0.003074017147830596, 0.0024814355289716856, 0.008796133404936946, 0.0037591896446362103, 0.021706738054348924, 0.004823719567633094, 0.028449843418527125, 0.0016668350338418022, 0.001502677038084655, 0.0019825234872209315, 0.004040812203252854, 0.024737347206788565, 0.0012627538135165169, 0.8563870087887665, 0.03265481361753712, 0.013107384584301444, 0.005455096474391353, 0.0022224467117890694, 0.08905841692657844, 0.11759251454100986, 0.42754783781505523, 0.11624378319143555, 0.026974626991486134, 0.10642333305234764, 0.018882238894040292, 0.03978757481244204, 0.04096771474331957, 0.016521959032285257, 0.10617869648706653, 0.03411273014797244, 0.2115667005534847, 0.6214842426296171, 0.02665763018185926, 0.012208067940552018, 0.026970541401273886, 0.010615711252653927, 0.3365180467091295, 0.04471868365180467, 0.04206475583864119, 0.008326698513800425, 0.062367303609341826, 0.019639065817409766, 0.017648619957537155, 0.011146496815286623, 0.011975849256900213, 0.006502123142250531, 0.005374203821656051, 0.13767250530785563, 0.012672505307855627, 0.0072319532908704885, 0.15555334394904458, 0.028363853503184714, 0.04242967091295117, 0.08047493403693931, 0.05474934036939314, 0.05013192612137203, 0.12730870712401055, 0.6873350923482849, 0.3078673212788888, 0.31289665908274455, 0.16932103939647947, 0.05963357681714765, 0.023230750808286432, 0.12705065261645312, 0.05561694290976059, 0.04143646408839779, 0.5465930018416206, 0.356353591160221, 0.005685232262537555, 0.014837069563207765, 0.023203143055234573, 0.01871966720591634, 0.006609660272706263, 0.9100531546105847, 0.006008782066096603, 0.006055003466605038, 0.008828287497111162, 0.06052208117289469, 0.15126050420168066, 0.6307884856070087, 0.052565707133917394, 0.020919005900232435, 0.05730377257285893, 0.026640443411407116, 0.11611374407582939, 0.13744075829383887, 0.10979462875197472, 0.636650868878357, 0.02007502083912198, 0.3198110586273965, 0.02785495971103084, 0.029869408168935817, 0.08113364823562101, 0.03507918866351764, 0.04445679355376494, 0.2964712420116699, 0.09266462906362878, 0.052584051125312586, 0.03582853486884197, 0.1908722542119855, 0.2222222222222222, 0.4717423757730859, 0.07933461292386436, 0.24247226624405704, 0.5990491283676703, 0.15847860538827258, 0.005103216672702729, 0.009877193560069799, 0.005004444737102032, 0.005103216672702729, 0.01126000065847957, 0.014124386790899812, 0.11974450992657953, 0.016066901524380207, 0.004806900865900635, 0.15438053534389096, 0.6482402133473809, 0.006288479899911105, 0.02237899142644974, 0.9599000877607506, 0.01772092081279957, 0.020721337112696706, 0.43759163327142997, 0.07135177402013489, 0.016029713615482357, 0.01769133027074577, 0.039585573257746066, 0.09383246994428697, 0.2593099403772847, 0.011729058743035871, 0.01798455673932167, 0.01417261264783501, 0.012204724409448819, 0.01804461942257218, 0.6538385826771653, 0.008070866141732283, 0.17788713910761156, 0.045931758530183726, 0.08402230971128609, 0.023895785076517986, 0.008631783175941874, 0.6713290174417453, 0.2815030389420126, 0.011007503316109363, 0.0036328720476727842, 0.020168067226890758, 0.034453781512605045, 0.30313216195569137, 0.09946524064171124, 0.03567608861726509, 0.019862490450725745, 0.0239877769289534, 0.01703590527119939, 0.013827349121466768, 0.11145912910618792, 0.03460656990068755, 0.10351413292589763, 0.11390374331550802, 0.06890756302521009, 0.010067442087772457, 0.016371811162154238, 0.8150229694067052, 0.020867950346984656, 0.006890822011533574, 0.010800508259212199, 0.10487733359397908, 0.015101163131658685, 0.0181913805276581, 0.002752121727352632, 0.0016642411492629788, 0.0012968112851399836, 0.02330658059682137, 0.002168556649039639, 0.5160156193714788, 0.0034725724413192894, 0.007795276725119235, 0.0015417645278886472, 0.013234679615567499, 0.002154147634760306, 0.11447241394216222, 0.04670681978645841, 0.00399850146251495, 0.07391824325297906, 0.0838676676128586, 0.03252834973559459, 0.002665667641676633, 0.0027737352487716316, 0.0048774513335542715, 0.004906269362112938, 0.014754830622037146, 0.0009798129709946543, 0.009207360124493883, 0.008544545467644559, 0.0022045791847379722, 0.9244202488687783, 0.07557975113122171, 0.006459213519662009, 0.012410627234319143, 0.7614153396165095, 0.012593435164120897, 0.0037780305492362692, 0.008510724731881704, 0.003473350666233344, 0.003737406564835879, 0.011618459538511537, 0.019662008449788757, 0.009241956451088723, 0.14709944751381215, 0.6058884297520661, 0.11570247933884298, 0.125, 0.08677685950413223, 0.06663223140495868, 0.026928142836235913, 0.05473437728669691, 0.08854090443436265, 0.05049026781794234, 0.6655934435826137, 0.018147226693985073, 0.09556563734816333, 0.031060094530722483, 0.08732838172406032, 0.13954535223947784, 0.258158901643034, 0.05739365293720459, 0.3556155750618951, 0.029709655638082377, 0.041188386225523295, 0.516, 0.484, 0.036396724294813464, 0.6440703670003033, 0.02881407340006066, 0.03563845920533819, 0.027449196239005155, 0.06308765544434335, 0.16454352441613587, 0.02208062582802347, 0.023342375875339095, 0.024288688410825817, 0.00851681281938048, 0.006939625260235947, 0.009210775345404076, 0.0331209387420352, 0.28692196075957355, 0.4944798435429941, 0.06706201501482556, 0.008327550312283136, 0.015708788089079554, 0.02258805513016845, 0.011638591117917305, 0.018376722817764167, 0.3251914241960184, 0.053828483920367536, 0.013859111791730475, 0.5545176110260337, 0.6813426329555362, 0.04751525719267655, 0.1874455100261552, 0.08369659982563209, 0.2553846153846154, 0.20307692307692307, 0.5415384615384615],
        "answer_type": "list_approximate" ,
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      },
      {
        "id": "legal-hard-16-5",
        "step": "Sort the rows by this share in descending order and pick the top row; output the associated state_name.",
        "query": "Sort the fractions and decide which state has the highest fraction of identity theft reports among those with multiple metro records?]",
        "answer": "Delaware",
        "answer_type": "string_exact",
        "data_sources": [
          "State MSA Identity Theft data/*.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-hard-17",
    "query": "If the 2007 report category distribution were exactly like the 2024 ones, how many reports in 2007 would be Auto Related (rounded to the nearest integer)?",
    "answer": 32542,
    "runtime": 1,
    "answer_type": "numeric_exact",
    "data_sources": [
      "2024_CSN_Report_Count.csv",
      "2024_CSN_Report_Categories.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-17-1",
        "query": "How many total reports were there in 2007?",
        "answer": 1070447,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Count.csv"
        ]
      },
      {
        "id": "legal-hard-17-2",
        "query": "What fraction of reports in 2024 were Auto Related? Round to 4 decimal places.",
        "answer": 0.0304,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Categories.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-17-1",
        "step": "Load 2024_CSN_Report_Count.csv (skipping first 2 rows) and drop rows with any NA values.",
        "query": "Load 2024_CSN_Report_Count.csv. What are the column names?",
        "answer": ["Year","# of Reports"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Count.csv"]
      },
      {
        "id": "legal-hard-17-2",
        "step": "Convert the 'Year' column to integer and the '# of Reports' column to integer after removing comma thousand-separators.",
        "query": "What are the numeric values for '# of Reports' in 2024_CSN_Report_Count.csv?",
        "answer": [325519, 551622, 713657, 860383, 909314, 906129, 1070447, 1261124, 1428977, 1470306, 1898543, 2115079, 2134565, 2620931, 3080378, 3060824, 2926167, 3161213, 3485938, 5165295, 6136404, 5317751, 5548815, 6471708],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Count.csv"]
      },
      {
        "id": "legal-hard-17-3",
        "step": "Extract the total number of reports recorded for the year 2007 from the cleaned report count table.",
        "query": "What is the total count of reports for the specified year 2007?",
        "answer": 1070447,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Count.csv"]
      },
      {
        "id": "legal-hard-17-4",
        "step": "Load 2024_CSN_Report_Categories.csv (skipping first 2 rows) and drop rows with any NA values.",
        "query": "How many data rows are in 2024_CSN_Report_Categories.csv",
        "answer": 29,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-hard-17-5",
        "step": "Locate the 'Auto Related' row in the category table, strip the trailing '%' from its 'Percentage' value, convert it to a decimal proportion.",
        "query": "What is the proportion of 'Auto Related' reports, expressed as a decimal?",
        "answer": "0.0304",
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-hard-17-6",
        "step": "Estimate the hypothetical 2007 Auto Related count by multiplying that 2024 proportion by the 2007 total reports and rounding to the nearest integer.",
        "query": "Estimate the hypothetical 2007 Auto Related count by multiplying that 2024 proportion by the 2007 total reports and rounding to the nearest integer. What is this estimate?",
        "answer": 32542,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Categories.csv",
          "2024_CSN_Report_Count.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-hard-18",
    "query": "If the 2007 reports were distributed exactly like the 2024 ones, how many identity theft reports in 2007 would concern people ages 40 or older (rounded to the nearest thousand)?",
    "answer": 91000,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Report_Count.csv",
      "2024_CSN_Report_Categories.csv",
      "2024_CSN_Identity_Theft_Reports_by_Age.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-18-1",
        "query": "How many total reports were there in 2007?",
        "answer": 1070447,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Count.csv"
        ]
      },
      {
        "id": "legal-hard-18-2",
        "query": "What fraction (round to 4 decimal places) of reports in 2024 were Identity Theft reports? Round to 4 decimal places.",
        "answer": 0.1754,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Categories.csv"
        ]
      },
      {
        "id": "legal-hard-18-3",
        "query": "What fraction (round to 4 decimal places) of identity theft reports in 2024 concerned people ages 40 or older? Round to 4 decimal places.",
        "answer": 0.4861,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Identity_Theft_Reports_by_Age.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-18-1",
        "step": "Read 2024_CSN_Report_Count.csv skipping the first two rows, drop missing rows, strip commas from '# of Reports', cast Year and '# of Reports' to int.",
        "query": "What are the columns in 2024_CSN_Report_Count.csv?",
        "answer": ["Year", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Report_Count.csv"
        ]
      },
      {
        "id": "legal-hard-18-2",
        "step": "Extract the total number of consumer reports for the year 2007 from this cleaned dataframe.",
        "query": "What is the total number of reports for 2007?",
        "answer": 1070447,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Count.csv"
        ]
      },
      {
        "id": "legal-hard-18-3",
        "step": "Read 2024_CSN_Report_Categories.csv, drop NaNs, locate the 'Identity Theft' row, remove '%' and convert its Percentage to a decimal share.",
        "query": "From 2024_CSN_Report_Categories.csv, what is the percentage share of 'Identity Theft' reports in 2024? Report in a proportion as a float.",
        "answer": 0.1754,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Categories.csv"
        ]
      },
      {
        "id": "legal-hard-18-4",
        "step": "Read 2024_CSN_Identity_Theft_Reports_by_Age.csv, drop NaNs, strip commas from '# of Reports', convert to int, then compute each age bracket's share of all identity-theft reports.",
        "query": "What is the proportion of identity theft reports of each age bracket compared to all identity-theft reports? Answer in a list of proportions as floats.",
        "answer": [0.02199815552346778, 0.19224765281118353, 0.29968327585604865, 0.21326297757667004, 0.13942229680461898, 0.08573837599797889, 0.03778301315165171, 0.009864252278380394],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Identity_Theft_Reports_by_Age.csv"]
      },
      {
        "id": "legal-hard-18-5",
        "step": "Sum the shares for all age brackets whose age range starts at 40 or above to get the fraction of identity-theft reports involving people 40+.",
        "query": "What is the sum of the 'Percentage of reports' values for age ranges greater than 40? Round to 4 digits after decimal.",
        "answer": 0.4861,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Identity_Theft_Reports_by_Age.csv"]
      },
      {
        "id": "legal-hard-18-6",
        "step": "Estimate the 2007 identity-theft reports for ages 40+ by multiplying: total_2007_reports * identity_theft_percentage * fraction_age_40_plus.",
        "query": "What is the final estimated number of identity theft reports for people 40 or older in 2007?",
        "answer": 91000,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Count.csv",
          "2024_CSN_Report_Categories.csv",
          "2024_CSN_Identity_Theft_Reports_by_Age.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-easy-19",
    "query": "What is the proportion (round to 3 decimal places) of fraud reporters who lost between $1-$500 in 2024?",
    "answer": 0.523,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Fraud_Reports_by_Amount_Lost.csv"
    ],
    "subtasks": [],
    "key_functionalities": [
      {
        "id": "legal-easy-19-1",
        "step": "Load the custom-formatted CSV file \"2024_CSN_Fraud_Reports_by_Amount_Lost.csv\"",
        "query": "Load the custom-formatted CSV file \"2024_CSN_Fraud_Reports_by_Amount_Lost.csv\". How many attributes and subtables are there espectively?",
        "answer": [4, 2],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Fraud_Reports_by_Amount_Lost.csv"
        ]
      },
      {
        "id": "legal-easy-19-2",
        "step": "Strip commas in quoted strings, remove quotes and blank lines,  handle table titles, deal with different csv blocks",
        "query": "For \"2024_CSN_Fraud_Reports_by_Amount_Lost\", strip commas in quoted strings, remove quotes and blank lines,  handle table titles, deal with different csv blocks. What are the table titles of the tables in the csv?",
        "answer": ["Reported Fraud Losses in $1 - $10,000 + Range", "Reported Fraud Losses in $1 - $1,000 Range"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Fraud_Reports_by_Amount_Lost.csv"]
      },
      {
        "id": "legal-easy-19-3",
        "step": "From the parsed attributes, read the scalar value in \"Reports with $ Loss\" and cast it to numeric.",
        "query": "What is the numeric value associated with the attribute \"Reports with $ Loss\"?",
        "answer": 987520,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Fraud_Reports_by_Amount_Lost.csv"]
      },
      {
        "id": "legal-easy-19-4",
        "step": "Locate the embedded sub-table \"Reported Fraud Losses in $1 - $1000 Range\" and iterate over its rows.",
        "query": "What are the column headers of the sub-table named \"Reported Fraud Losses in $1 - $1000 Range\"?",
        "answer": ["Amount Lost ", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Fraud_Reports_by_Amount_Lost.csv"]
      },
      {
        "id": "legal-easy-19-5",
        "step": "Within that sub-table sum the counts whose loss-range label is one of: $1-$100, $101-$200, $201-$300, $301-$400, $401-$500 to get the total below $500.",
        "query": "What are the loss-range labels that are summed to calculate the total below $500?",
        "answer": 516308,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Fraud_Reports_by_Amount_Lost.csv"]
      },
      {
        "id": "legal-easy-19-6",
        "step": "Compute the proportion of fraud reporters who lost between $1--$500 by dividing total_below_500 by total_reports and print the resulting float.",
        "query": "What is the ratio of the total number of fraud reports with losses below $500 to the total number of reports? Round to 4 digits after decimal.",
        "answer": 0.5228,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Fraud_Reports_by_Amount_Lost.csv"]
      }
    ]
  },
  {
    "id": "legal-easy-20",
    "query": "What is the percentage of fraud reporters in 2024?",
    "answer": 40,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Number_of_Reports_by_Type.csv"
    ],
    "subtasks": [],
    "key_functionalities": [
      {
        "id": "legal-easy-20-1",
        "step": "Read the file 2024_CSN_Number_of_Reports_by_Type.csv line-by-line.",
        "query": "How many columns are there in 2024_CSN_Number_of_Reports_by_Type.csv ",
        "answer": 4,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-20-2",
        "step": "Clean each line: remove any commas that are inside quotes and strip the surrounding quote marks so that numbers containing commas are not split across columns.",
        "query": "How many rows of data are there in 2024_CSN_Number_of_Reports_by_Type.csv",
        "answer": 24,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-20-3",
        "step": "Parse the file into logical blocks separated by blank lines; treat the first block as a CSV-style sub-table whose header row is 'Number of Reports by Type'.",
        "query": "What is the name of the sub-table header used for further processing?",
        "answer": "Number of Reports by Type",
        "answer_type": "string_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-20-4",
        "step": "Within sub-table, select rows with Year 2024.",
        "query": "How many rows belong to Year 2024?",
        "answer": 1,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-20-5",
        "step": "Convert number entries to integers.",
        "query": "What are the 4 numeric values of the row corresponding to Year 2024?",
        "answer": [2024, 2600678, 1135291, 2759963],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-20-6",
        "step": "Sum those converted numbers to obtain the total number of reports for 2024 across all categories.",
        "query": "What is the total number of reports for the year 2024?",
        "answer": 6495932,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-20-7",
        "step": "Take the first numeric cell after the year in that row containing the count of Fraud reports.",
        "query": "What is the value of Fraud reports for 2024?",
        "answer": 2600678,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-20-8",
        "step": "Compute the proportion of Fraud reports by dividing the Fraud count by the total 2024 report count.",
        "query": "What is the result of dividing the number of Fraud reports by the total number of reports in 2024? Round to 4 digits after decimal.",
        "answer": "0.4004",
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Number_of_Reports_by_Type.csv"]
      }
    ]
  },
  {
    "id": "legal-easy-21",
    "query": "What is the total number of identity theft reporters in Alabama in 2024?",
    "answer": 15387,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_State_Identity_Theft_Reports.csv"
    ],
    "subtasks": [],
    "key_functionalities": [
      {
        "id": "legal-easy-21-1",
        "step": "Open the raw file 2024_CSN_State_Identity_Theft_Reports.csv and load every line.",
        "query": "How many data rows are there in 2024_CSN_State_Identity_Theft_Reports.csv?",
        "answer": 363,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_State_Identity_Theft_Reports.csv"
        ]
      },
      {
        "id": "legal-easy-21-2",
        "step": "Before splitting on commas, remove commas found inside quoted strings so embedded commas are not treated as delimiters.",
        "query": "Clean the number of reports column. What are the number of reports? Answer in a list of numbers.",
        "answer": [5245, 746, 696, 2846, 4842, 1012, 131, 252, 69, 79, 116, 219, 72, 1987, 8097, 2502, 1134, 3541, 5617, 1823, 755, 1979, 855, 391, 1092, 2070, 520, 11916, 68323, 10341, 6442, 18629, 38458, 7182, 2230, 4191, 1282, 1165, 1822, 2777, 1002, 1232, 3786, 504, 554, 948, 2276, 663, 320, 1785, 157, 152, 670, 1226, 385, 428, 1572, 160, 189, 532, 800, 196, 7335, 57997, 3871, 3382, 18568, 37464, 6344, 3397, 26174, 2262, 1473, 12232, 19345, 3852, 301, 805, 106, 117, 308, 601, 139, 371, 787, 190, 128, 452, 646, 209, 4128, 17685, 2407, 3693, 7674, 11872, 3743, 1467, 4860, 848, 627, 3089, 4883, 1032, 630, 1321, 284, 411, 527, 1088, 346, 742, 1429, 479, 302, 904, 1141, 369, 954, 2101, 545, 345, 933, 2139, 532, 937, 6970, 726, 700, 2986, 5558, 1044, 281, 520, 219, 122, 256, 491, 142, 2057, 8958, 1054, 1125, 3112, 5707, 1260, 4347, 11469, 1242, 2462, 2597, 8543, 964, 2469, 9383, 1346, 1225, 4022, 7585, 2820, 1272, 2799, 522, 549, 1164, 1877, 565, 608, 3066, 407, 266, 1844, 2862, 516, 1731, 3740, 777, 602, 2466, 3739, 917, 232, 440, 104, 282, 202, 337, 137, 404, 840, 207, 253, 362, 746, 228, 990, 6667, 769, 597, 2917, 4593, 1093, 371, 797, 142, 124, 276, 513, 202, 2906, 12569, 2052, 1437, 3783, 8571, 2307, 417, 891, 420, 391, 514, 922, 290, 6073, 26736, 2652, 4275, 7811, 15951, 4515, 2678, 11172, 1681, 1137, 4470, 9664, 2396, 127, 289, 62, 70, 180, 286, 86, 3418, 10311, 1369, 2867, 4414, 8401, 2115, 974, 2079, 667, 469, 1205, 2129, 671, 1156, 2217, 616, 643, 1053, 1827, 840, 4762, 16639, 2051, 2070, 4839, 11521, 2837, 45, 545, 523, 76, 183, 367, 71, 382, 996, 174, 349, 419, 808, 152, 1373, 6451, 705, 566, 3178, 4831, 1323, 139, 297, 63, 52, 159, 218, 78, 1621, 5445, 932, 1149, 2849, 4628, 1118, 9273, 44480, 6846, 4879, 25304, 37984, 9079, 675, 1730, 489, 453, 842, 1552, 410, 120, 219, 66, 52, 110, 133, 53, 2699, 7245, 1198, 904, 2775, 5674, 1491, 2318, 4420, 1130, 1274, 2049, 3560, 997, 343, 610, 193, 123, 295, 627, 183, 1288, 3050, 796, 567, 1588, 2525, 787, 96, 186, 59, 30, 148, 223, 59],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_State_Identity_Theft_Reports.csv"
        ]
      },
      {
        "id": "legal-easy-21-3",
        "step": "Iterate over the cleaned lines and split the content into blocks separated by blank lines; each block represents either a sub-table or a set of key-value attributes.",
        "query": "How many subtables are in the state identity theft report csv?",
        "answer": 1,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_State_Identity_Theft_Reports.csv"
        ]
      },
      {
        "id": "legal-easy-21-4",
        "step": "For any block that looks like a table (first block or a block whose header is a single cell) treat the first non-blank line as the column list, the remaining lines as data rows, processing into tabular data and preserving the sub-table title.",
        "query": "What is the title of the table in 2024_CSN_State_Identity_Theft_Reports.csv?",
        "answer": "State: Identity Theft Reports",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_State_Identity_Theft_Reports.csv"
        ]
      },
      {
        "id": "legal-easy-21-5",
        "step": "Locate the sub-table named \"State: Identity Theft Reports\".",
        "query": "Which sub-table's data will be used for further processing?",
        "answer": "State: Identity Theft Reports",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_State_Identity_Theft_Reports.csv"
        ]
      },
      {
        "id": "legal-easy-21-6",
        "step": "Loop over the rows of the identity theft reports sub-table, select the rows where the first column equals \"Alabama\", convert the value in the third column to an integer, and accumulate these values.",
        "query": "What are the integers summed from the # of Reports column of rows belonging to alabama?",
        "answer": 15387,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_State_Identity_Theft_Reports.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-hard-22",
    "query": "What is the proportion (round to 4 decimal places) of all reports who reported identity theft with Back Account (Theft Type) and New Accounts (Theft Subtype)?",
    "answer": 0.0555,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Report_Type.csv",
      "2024_CSN_Identity_Theft_Reports_by_Type.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-22-1",
        "query": "Clean table 2024_CSN_Report_Type.csv. What is the total number of identity theft reports?",
        "answer": 1135291,
        "answer_type": "numeric_exact"
      },
      {
        "id": "legal-hard-22-2",
        "query": "Clean table 2024_CSN_Identity_Theft_Reports_by_Type.csv. What is the number of identity theft reports with Back Account and New Accounts",
        "answer": 62982,
        "answer_type": "numeric_exact"
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-22-1",
        "step": "Load the two CSV files 2024_CSN_Report_Type.csv and 2024_CSN_Identity_Theft_Reports_by_Type.csv line-by-line.",
        "query": "What are the names of the CSV files that are needed for this question?",
        "answer": ["2024_CSN_Report_Type.csv", "2024_CSN_Identity_Theft_Reports_by_Type.csv"],
        "answer_type": "list_approximate",
        "data_sources": [
          "2024_CSN_State_Identity_Theft_Reports.csv",
          "2024_CSN_Report_Type.csv"
        ]
      },
      {
        "id": "legal-hard-22-2",
        "step": "Clean each line by removing commas that appear inside quoted strings to handle thousands-separators in numeric values.",
        "query": "What is the column name of the column that needs to be cleaned due to thousand separators in 2024_CSN_Report_Type.csv?",
        "answer": " # of Reports ",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_Report_Type.csv"
        ]
      },
      {
        "id": "legal-hard-22-3",
        "step": "Split each file into blocks separated by blank lines, classifying each block either as an attribute block or as a sub-table block.",
        "query": "How many subtables does 2024_CSN_Report_Type.csv have?",
        "answer": 4,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Type.csv"]
      },
      {
        "id": "legal-hard-22-4",
        "step": "For every sub-table block, process into tabular data.",
        "query": "What are the titles of the subtables in 2024_CSN_Report_Type.csv?",
        "answer": ["Report Type", "Top 10 Categories", "Identity Theft Types", "Top 10 Other Categories"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Type.csv"]
      },
      {
        "id": "legal-hard-22-5",
        "step": "Extract the tabular data named \"Report Type\"; convert the value in its first row and second column to an integer to obtain the grand-total number of reports (variable total).",
        "query": "What is the integer value of the grand total number of reports?",
        "answer": 1135291,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Type.csv"]
      },
      {
        "id": "legal-hard-22-6",
        "step": "Extract the tabular data named \"Identity Theft Reports by Type\"; convert the value in its second row and third column to an integer to obtain the identity-theft count of interest (variable correct, assumed to be Alabama).",
        "query": "What is the integer value extracted from the \"Identity Theft Reports by Type\" table representing identity theft report count with Back Account (Theft Type) and New Accounts (Theft Subtype)?",
        "answer": 62982,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Identity_Theft_Reports_by_Type.csv"]
      },
      {
        "id": "legal-easy-21-7",
        "step": "Compute correct / total (a ratio) and return/print that result.",
        "query": "What is the result of dividing the identity-theft count by the grand-total number of reports? Round to 4 decimal places.",
        "answer": 0.0555,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_State_Identity_Theft_Reports.csv",
          "2024_CSN_Report_Type.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-hard-23",
    "query": "What state (including DC and PR) has the highest report density (reports per 100K population) considering all type of reports (identity theft, fraud and others)?",
    "answer": "District of Columbia",
    "answer_type": "string_approximate",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
      "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-23-1",
        "query": "What file(s) are needed to answer \"What state (including DC and PR) has the highest report density (reports per 100K population) considering all type of reports (identity theft, fraud and others)?\"? Answer in a list of filenames.",
        "answer": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ],
        "answer_type": "list_exact"
      },
      {
        "id": "legal-hard-23-2",
        "query": "Which column do we join the data on?",
        "answer": "State",
        "answer_type": "numeric_approximate"
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-23-1",
        "step": "Load the two raw CSV files that hold 'State Rankings' for Identity-Theft reports and for Fraud & Other reports.",
        "query": "Which files contain data about state report count of all typesand populations?",
        "answer": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ],
        "answer_type": "string_approximate",
        "data_sources": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-23-2",
        "step": "Strips commas inside quoted strings,  \n- splits the file into separate embedded tables.",
        "query": "How many subtables are in '2024_CSN_State_Rankings_Identity_Theft_Reports.csv' and '2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv' respectively?",
        "answer": [1, 1],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-23-3",
        "step": "Extract from each parsed file the embedded table named 'State Rankings: Identity Theft Reports' and 'State Rankings: Fraud and Other Reports'.",
        "query": "What are the table titles containing state ranking information?",
        "answer": ["State Rankings: Fraud and Other Reports", "State Rankings: Identity Theft Reports"],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-23-4",
        "step": "Iterate over the rows of the identity-theft table; for every state pick out:  \n- the state name (row[1]),  \n- the total-reports column (row[2]),  \n- the 'reports-per-100 K' column (row[3]). Derive the state's population as  population = (reports-per-100 K) / (total reports).",
        "query": "What are the column names of the relevant tables?",
        "answer": ["Rank", "State", "Reports per 100K Population", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-23-5",
        "step": "Perform a join with the fraud/other table on state and pull the other table's 'reports-per-100 K' value (row2[3]).",
        "query": "Inner-join the two tables on state. How many rows are in the join result?",
        "answer": 52,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-23-6",
        "step": "Compute a combined density for the state: combined_density = (identity_theft_reports_per_100k + fraud_other_reports_per_100k) / population.",
        "query": "What are the combined densities of each state?",
        "answer": [2689.928453038674, 2624.841015101421, 2333.6946210101837, 1953.9708715360052, 2268.468797564688, 1552.1572528646698, 1647.625045644936, 1817.8685510599714, 1807.774147067026, 2123.7640820410206, 1817.2691393739021, 1695.6217201662919, 1829.3843919186584, 1706.814964074555, 1745.495949767531, 1656.5778170050014, 1489.5821839807668, 1337.5027624309394, 1625.4687613777035, 1406.1654543161083, 1454.3062808750883, 1352.1594756176619, 1572.6461538461538, 1398.9798368062582, 1179.926971608833, 1468.2008769752629, 1270.0602776334347, 1356.1755526657996, 1077.3969171483623, 1304.20202020202, 1254.8731516381558, 1064.167879019908, 1003.5564409030545, 1141.7691579943235, 1184.7763347763348, 1055.39690838827, 1002.0590994371482, 1120.1577889447237, 1004.7256392536282, 1017.6037588097101, 1030.1828296703297, 1007.5624284077892, 974.1761723700887, 840.3169175810156, 1017.3314203730272, 817.6742424242424, 948.370847793753, 1095.197435897436, 1010.1551459293394, 770.4662721893491, 2989.3953488372094, 429.92783505154637],
        "answer_type": "numeric_approximate",
        "data_sources": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-23-7",
        "step": "Keep track of the state whose combined_density is the highest; return that state name as the answer.",
        "query": "What is the state with the highest density",
        "answer": "District of Columbia",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-hard-24",
    "query": "For the state (including DC and PR) with the highest # of reporter of all type of reports (identity theft, fraud and others), which one of its metropolitan area has the highest # of reports for identity theft?",
    "answer": "Los Angeles-Long Beach-Anaheim CA Metropolitan Statistical Area",
    "answer_type": "string_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
      "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv",
      "all csv in State MSA Identity Theft data/"
    ],
    "subtasks": [
      {
        "id": "legal-hard-24-1",
        "query": "Which state has the highest # of reports of all types?",
        "answer": "California",
        "answer_type": "string_approximate"
      },
      {
        "id": "legal-hard-24-2",
        "query": "List the number of identity theft reports of each metropolitan area in the state with the highest # of reports of all types. Answer in a list of numbers.",
        "answer": [
          2525,
          382,
          231,
          180,
          3235,
          301,
          71624,
          482,
          1082,
          214,
          1837,
          299,
          15889,
          6483,
          555,
          10260,
          11641,
          4515,
          370,
          385,
          677,
          681,
          2048,
          136,
          1278,
          1186,
          306
        ],
        "answer_type": "list_exact"
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-24-1",
        "step": "CSV parsing that removes commas inside quoted strings, removes quotes, splits into columns/values and stores each sub-table.",
        "query": "What are the column headers of the 'Metropolitan Areas: Identity Theft Reports' sub-tables?",
        "answer": ["Metropolitan Area", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": [
          "all csv in State MSA Identity Theft data/"
        ]
      },
      {
        "id": "legal-hard-24-2",
        "step": "Load 2024_CSN_State_Rankings_Identity_Theft_Reports.csv, 2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv, all csv in State MSA Identity Theft data/.",
        "query": "Which files are loaded and parsed to extract data about state rankings and identity theft data?",
        "answer": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv",
          "all csv in State MSA Identity Theft data/"
        ],
        "answer_type": "list_approximate",
        "data_sources": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv",
          "all csv in State MSA Identity Theft data/"
        ]
      },
      {
        "id": "legal-hard-24-3",
        "step": "For every state/territory (row[1] is name) locate its row in both tables and add the two report counts (row[3] from each table) to get that state's total number of all reports.",
        "query": "What are the column names corresponding to the report counts in the identity theft reports table and fraud and other reports table being summed? Answer in a list of column names.",
        "answer": ["# of Reports", "# of Reports"],
        "answer_type": "list_approximate",
        "data_sources": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-24-4",
        "step": "Determine the single territory with the highest combined total of reports across the two tables.",
        "query": "In the state/territory with the highest combined total of identity theft and fraud reports, how many combined reports are there?",
        "answer": 71624,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-24-5",
        "step": "Open that state's per-state MSA identity-theft file.",
        "query": "What is the name of the state/territory whose MSA data is being analyzed?",
        "answer": "California",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_State_Rankings_Identity_Theft_Reports.csv",
          "2024_CSN_State_Rankings_Fraud_and_Other_Reports.csv"
        ]
      },
      {
        "id": "legal-hard-24-6",
        "step": "Within the sub-table \"Metropolitan Areas: Identity Theft Reports\" convert the report count in column 1 to int and find the metropolitan area (row[0]) with the maximum value.",
        "query": "Within the sub-table \"Metropolitan Areas: Identity Theft Reports\" for the desired state, what are the names of MSAs in the first column?",
        "answer": ["Bakersfield-Delano CA Metropolitan Statistical Area", "Chico CA Metropolitan Statistical Area", "El Centro CA Metropolitan Statistical Area", "Eureka-Arcata CA Micropolitan Statistical Area", "Fresno CA Metropolitan Statistical Area", "Hanford-Corcoran CA Metropolitan Statistical Area", "Los Angeles-Long Beach-Anaheim CA Metropolitan Statistical Area", "Merced CA Metropolitan Statistical Area", "Modesto CA Metropolitan Statistical Area", "Napa CA Metropolitan Statistical Area", "Oxnard-Thousand Oaks-Ventura CA Metropolitan Statistical Area", "Redding CA Metropolitan Statistical Area", "Riverside-San Bernardino-Ontario CA Metropolitan Statistical Area", "Sacramento-Roseville-Folsom CA Metropolitan Statistical Area", "Salinas CA Metropolitan Statistical Area", "San Diego-Chula Vista-Carlsbad CA Metropolitan Statistical Area", "San Francisco-Oakland-Fremont CA Metropolitan Statistical Area", "San Jose-Sunnyvale-Santa Clara CA Metropolitan Statistical Area", "San Luis Obispo-Paso Robles CA Metropolitan Statistical Area", "Santa Cruz-Watsonville CA Metropolitan Statistical Area", "Santa Maria-Santa Barbara CA Metropolitan Statistical Area", "Santa Rosa-Petaluma CA Metropolitan Statistical Area", "Stockton-Lodi CA Metropolitan Statistical Area", "Truckee-Grass Valley CA Micropolitan Statistical Area", "Vallejo CA Metropolitan Statistical Area", "Visalia CA Metropolitan Statistical Area", "Yuba City CA Metropolitan Statistical Area"],
        "answer_type": "list_exact",
        "data_sources": ["California.csv"]
      },
      {
        "id": "legal-hard-24-7",
        "step": "Return / print the name of this metropolitan area as the answer.",
        "query": "What is the name of the metropolitan area with the highest identity theft report count in the desired state?",
        "answer": "Los Angeles-Long Beach-Anaheim CA Metropolitan Statistical Area",
        "answer_type": "string_exact",
        "data_sources": ["California.csv"]
      }
    ]
  },
  {
    "id": "legal-easy-25",
    "query": "Which branch of the U.S. Military had the largest \"Median Fraud Loss\" reported by its service members in 2024?",
    "answer": "U.S. Space Force",
    "answer_type": "string_approximate",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Fraud, Identity Theft, and Other Reports by Military Consumers.csv"
    ],
    "subtasks": [
      {
        "id": "legal-easy-25-1",
        "query": "What are the military branches in the reports?",
        "answer": [
          "U.S. Air Force",
          "U.S. Army",
          "U.S. Coast Guard",
          "U.S. Marines",
          "U.S. Navy",
          "U.S. Space Force"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Fraud, Identity Theft, and Other Reports by Military Consumers.csv"
        ]
      },
      {
        "id": "legal-easy-25-2",
        "query": "What are the mediam fraud losses of each military branch? Report a list of numbers in dollars without the dollar sign.",
        "answer": [
          584,
          731,
          500,
          727,
          569,
          1300
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Fraud, Identity Theft, and Other Reports by Military Consumers.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-easy-25-1",
        "step": "Read the file 2024_CSN_Fraud, Identity Theft, and Other Reports by Military Consumers.csv.",
        "query": "Which file is needed to solve the question?",
        "answer": "2024_CSN_Fraud, Identity Theft, and Other Reports by Military Consumers.csv",
        "answer_type": "string_approximate",
        "data_sources": [
          "2024_CSN_Fraud, Identity Theft, and Other Reports by Military Consumers.csv"
        ]
      },
      {
        "id": "legal-easy-25-2",
        "step": "Isolate the slice of rows (index 7 to 13) that contains the fraud-loss table by military branch.",
        "query": "Which military branches are included in the extracted fraud loss table?",
        "answer": [
          "U.S. Air Force",
          "U.S. Army",
          "U.S. Coast Guard",
          "U.S. Marines",
          "U.S. Navy",
          "U.S. Space Force"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Fraud, Identity Theft, and Other Reports by Military Consumers.csv"
        ]
      },
      {
        "id": "legal-easy-25-3",
        "step": "Take the first row of that slice/block as the true header row.",
        "query": "Which columns are in the subtable detailing the breakdown by branch?",
        "answer": ["Military Branch","# of Reports","# of Fraud Reports","% Reporting Fraud Loss","Total Fraud Loss","Median Fraud Loss"],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Fraud, Identity Theft, and Other Reports by Military Consumers.csv"
        ]
      },
      {
        "id": "legal-easy-25-4",
        "step": "From the data rows, strip the \"$\" and comma characters from the 'Median Fraud Loss' string and convert it to an integer.",
        "query": "After data cleaning, what are the integer values in the 'Median Fraud Loss' column in the subtable containing the breakdown by branch?",
        "answer": [584, 731, 500, 727, 569, 300],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_Fraud, Identity Theft, and Other Reports by Military Consumers.csv"
        ]
      },
      {
        "id": "legal-easy-25-5",
        "step": "From clean data, find the branch whose median fraud loss is the largest.",
        "query": "What is the name of the military branch with the highest median fraud loss?",
        "answer": "U.S. Army",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_Fraud, Identity Theft, and Other Reports by Military Consumers.csv"
        ]
      }
    ]
  },
  {
    "id": "legal-easy-26",
    "query": "Which states had \"Identity Theft\" as their top report category?",
    "answer": [
      "Arizona",
      "California",
      "Massachusetts",
      "Ohio",
      "Oklahoma",
      "Rhode Island"
    ],
    "answer_type": "list_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_State_Top_Ten_Report_Categories.csv"
    ],
    "subtasks": [
      {
        "id": "legal-easy-26-1",
        "query": "Which file is needed to answer \"Which states had \"Identity Theft\" as their top report category?\"? Answer in a list of filenames.",
        "answer": [
          "2024_CSN_State_Top_Ten_Report_Categories.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_State_Top_Ten_Report_Categories.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-easy-26-1",
        "step": "Load `2024_CSN_State_Top_Ten_Report_Categories.csv`.",
        "query": "Which file is needed to analyze report categories?",
        "answer": "2024_CSN_State_Top_Ten_Report_Categories.csv",
        "answer_type": "string_approximate",
        "data_sources": ["2024_CSN_State_Top_Ten_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-26-2",
        "step": "Drop the first header line and last four footnote lines so that only data rows remain.",
        "query": "How many data rows are in the table 2024_CSN_State_Top_Ten_Report_Categories.csv?",
        "answer": 520,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_State_Top_Ten_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-26-3",
        "step": "Use the first remaining row as the real header, strip whitespace from each column name, then remove that row from the data.",
        "query": "What are the column names of 2024_CSN_State_Top_Ten_Report_Categories.csv",
        "answer": ["State", "Category", "# of Reports", "Percentage"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_State_Top_Ten_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-26-4",
        "step": "Convert the `# of Reports` numeric column from thousands-separated string to integers.",
        "query": "What are the integer values for the number of reports?",
        "answer": [26474, 13596, 8302, 4117, 4068, 3931, 2314, 1923, 1643, 1358, 1850, 780, 663, 544, 505, 363, 289, 255, 248, 235, 20863, 20673, 17681, 7198, 7110, 4483, 4396, 3207, 2831, 2803, 6533, 6340, 4821, 2173, 2124, 1546, 1200, 1055, 857, 751, 139665, 128620, 71839, 40233, 35661, 19443, 17432, 16173, 15953, 12836, 15028, 12087, 6536, 6421, 6231, 3277, 2492, 2332, 2322, 2289, 9952, 8502, 6640, 3715, 3565, 2096, 1747, 1494, 1374, 1150, 6110, 3942, 2398, 1417, 1322, 984, 699, 586, 537, 402, 4655, 3225, 2227, 1757, 1070, 698, 657, 630, 553, 448, 204463, 115840, 47355, 25838, 23317, 22745, 16394, 10958, 10153, 10019, 100029, 55955, 18745, 16314, 14846, 9940, 7864, 5622, 5399, 4329, 3235, 1990, 1792, 1236, 1049, 531, 469, 426, 412, 407, 3557, 2367, 1656, 1309, 1121, 654, 637, 551, 536, 488, 66249, 43028, 21393, 13278, 11434, 8757, 7315, 4970, 4627, 4202, 16575, 13471, 11822, 5307, 5288, 3322, 2901, 2159, 2131, 1785, 5009, 3919, 2265, 2197, 2184, 864, 828, 759, 745, 609, 5163, 4518, 2589, 2099, 2011, 1177, 1155, 821, 785, 769, 7049, 6396, 4864, 3636, 3190, 1808, 1627, 1386, 1353, 1158, 31365, 15991, 6691, 4349, 3792, 2968, 1974, 1462, 1326, 1059, 2782, 1746, 1279, 1103, 709, 480, 404, 383, 378, 324, 36749, 19990, 14288, 9265, 6598, 5036, 4145, 3107, 2818, 2248, 27141, 18277, 14482, 6920, 6774, 3112, 2494, 2490, 2275, 2014, 30606, 23783, 17745, 9319, 8413, 6135, 4311, 3490, 2886, 2670, 11413, 7280, 5671, 4790, 4716, 1915, 1804, 1638, 1514, 1487, 14024, 7903, 4201, 2322, 1953, 1831, 1370, 910, 794, 731, 14586, 11535, 11039, 5515, 5126, 3710, 3666, 2489, 2064, 1973, 2375, 1447, 1037, 846, 463, 363, 353, 316, 304, 291, 3534, 2974, 2554, 1337, 1328, 773, 633, 539, 532, 492, 18124, 14631, 7227, 3890, 3336, 3335, 2456, 1751, 1510, 1482, 3083, 2079, 1648, 1328, 1214, 650, 497, 491, 403, 357, 44589, 29037, 17094, 10447, 8879, 5709, 5078, 4282, 3967, 3089, 4630, 3171, 2276, 1717, 1579, 959, 763, 743, 689, 684, 85519, 58692, 37038, 19999, 19963, 9594, 9234, 8795, 8728, 6443, 42508, 27466, 20152, 10012, 9995, 6955, 5503, 3875, 3670, 3371, 1044, 924, 737, 515, 444, 238, 220, 192, 158, 141, 27766, 27519, 20217, 10851, 9922, 6402, 5957, 3948, 3728, 3510, 6747, 6134, 5804, 2824, 2781, 2038, 1716, 1337, 1006, 987, 10654, 6898, 4665, 4114, 2819, 1663, 1660, 1630, 1557, 1364, 62010, 37717, 24283, 13487, 12590, 8162, 6046, 5125, 4375, 3803, 7517, 1649, 1099, 733, 335, 203, 191, 172, 166, 156, 2896, 2596, 2049, 1075, 945, 492, 460, 348, 307, 302, 26863, 15146, 10167, 5363, 4804, 4756, 3017, 1779, 1678, 1649, 1377, 845, 668, 650, 333, 252, 237, 212, 200, 174, 19135, 14829, 12634, 6011, 5833, 4406, 3651, 2328, 2311, 2139, 183433, 116484, 49294, 29526, 26684, 23372, 15620, 10249, 10064, 9941, 6604, 5224, 2746, 2582, 2210, 1305, 1218, 1097, 1067, 994, 1548, 651, 650, 521, 270, 260, 223, 196, 192, 169, 26319, 19135, 18460, 9595, 8865, 4967, 4908, 3607, 3132, 3040, 20988, 13068, 8100, 7657, 6791, 3100, 3056, 2986, 2663, 2381, 2863, 2017, 1498, 1454, 1284, 738, 735, 594, 532, 440, 10268, 8798, 7862, 5013, 4281, 2374, 1941, 1751, 1628, 1446, 1103, 697, 643, 437, 266, 259, 223, 207, 203, 187],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_State_Top_Ten_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-26-5",
        "step": "For every state group, sort its rows in descending order of `# of Reports` to identify the category with the highest count.",
        "query": "What column names are used for the dataset in the final steps of the analysis?",
        "answer": ["State", "Category", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_State_Top_Ten_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-26-6",
        "step": "If the top category for that state is `'Identity Theft'`, record the state name.",
        "query": "What states have 'Identity Theft' as their top reported category?",
        "answer": ["Arizona", "California", "Massachusetts", "Ohio", "Oklahoma", "Rhode Island"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_State_Top_Ten_Report_Categories.csv"]
      }
    ]
  },
  {
    "id": "legal-easy-27",
    "query": "How many states had \"Prizes, Sweepstakes and Lotteries\" in their top-10 report categories in 2024?",
    "answer": 27,
    "answer_type": "numeric_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_State_Top_Ten_Report_Categories.csv"
    ],
    "subtasks": [
      {
        "id": "legal-easy-27-1",
        "query": "Which file is needed to answer \"How many states had \"Prizes, Sweepstakes and Lotteries\" in their top-10 report categories in 2024\"? Answer in a list of filenames.",
        "answer": [
          "2024_CSN_State_Top_Ten_Report_Categories.csv"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_State_Top_Ten_Report_Categories.csv"
        ]
      },
      {
        "id": "legal-easy-27-2",
        "query": "Which states have \"Prizes, Sweepstakes and Lotteries\" in its top-ten categories in 2024?",
        "answer": [
          "Alabama",
          "Alaska",
          "Arkansas",
          "Hawaii",
          "Idaho",
          "Indiana",
          "Iowa",
          "Kansas",
          "Kentucky",
          "Louisiana",
          "Maine",
          "Michigan",
          "Minnesota",
          "Mississippi",
          "Missouri",
          "Montana",
          "Nebraska",
          "New Mexico",
          "North Dakota",
          "Oklahoma",
          "Oregon",
          "South Dakota",
          "Tennessee",
          "Vermont",
          "West Virginia",
          "Wisconsin",
          "Wyoming"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "2024_CSN_State_Top_Ten_Report_Categories.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-easy-27-1",
        "step": "Read the file 2024_CSN_State_Top_Ten_Report_Categories.csv.",
        "query": "What file(s) are needed to answer this question?",
        "answer": ["2024_CSN_State_Top_Ten_Report_Categories.csv"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_State_Top_Ten_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-27-2",
        "step": "Remove the first metadata row and the last four summary/footer rows.",
        "query": "How many data rows are in 2024_CSN_State_Top_Ten_Report_Categories.csv?",
        "answer": 520,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_State_Top_Ten_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-27-3",
        "step": "Take the first remaining row as the true header: convert it to a list of values and assign them (after stripping whitespace) as the DataFrame's column names.",
        "query": "What are the column names of 2024_CSN_State_Top_Ten_Report_Categories.csv",
        "answer": ["State", "Category", "# of Reports", "Percentage"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_State_Top_Ten_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-27-4",
        "step": "Group the cleaned data by the State column, and for each state collect the list of values in the Category column.",
        "query": "Which states have at least one entry with \"Prizes, Sweepstakes and Lotteries\" in the Category column?",
        "answer":
        ["Alabama", "Alaska", "Arkansas", "Hawaii", "Idaho", "Indiana", "Iowa", "Kansas", "Kentucky", "Louisiana", "Maine", "Michigan", "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "New Mexico", "North Dakota", "Oklahoma", "Oregon", "South Dakota", "Tennessee", "Vermont", "West Virginia", "Wisconsin", "Wyoming"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_State_Top_Ten_Report_Categories.csv"]
      },
      {
        "id": "legal-easy-27-5",
        "step": "For each state, check whether the string 'Prizes, Sweepstakes and Lotteries' appears in its Category list; if so, record the state.",
        "query": "How many states contain the category 'Prizes, Sweepstakes and Lotteries'?",
        "answer": 27,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_State_Top_Ten_Report_Categories.csv"]
      }
    ]
  },
  {
    "id": "legal-hard-28",
    "query": "In 2024, as a percentage of all reports for the same demographic, did military consumers report a higher percentage of Imposter Scams than the general population? Answer Yes or No. No explanation needed.",
    "answer": "Yes",
    "answer_type": "string_exact",
    "runtime": 1,
    "data_sources": [
      "2024_CSN_Reports_by_Military_Consumers.csv",
      "2024_CSN_Report_Categories.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-28-1",
        "query": "What is the total number of reports by military consumers?",
        "answer": 213831,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Reports_by_Military_Consumers.csv"
        ]
      },
      {
        "id": "legal-hard-28-2",
        "query": "What is the number of Imposter Scams reported by military consumers?",
        "answer": 44587,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Reports_by_Military_Consumers.csv"
        ]
      },
      {
        "id": "legal-hard-28-3",
        "query": "What is the percentage (in percentage, round to 2 decimal places) of reports by military consumers which are Imposter Scams?",
        "answer": 20.85,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Reports_by_Military_Consumers.csv"
        ]
      },
      {
        "id": "legal-hard-28-4",
        "query": "What is the percentage (in percentage, round to 2 decimal places) of reports by the general population which are Imposter Scams?",
        "answer": 13.07,
        "answer_type": "numeric_exact",
        "data_sources": [
          "2024_CSN_Report_Categories.csv"
        ]
      },
      {
        "id": "legal-hard-28-5",
        "query": "Do military consumers report a higher percentage of Imposter Scams than the general population? Answer Yes or No. No explanation needed.",
        "answer": "Yes",
        "answer_type": "string_exact",
        "data_sources": [
          "2024_CSN_Reports_by_Military_Consumers.csv",
          "2024_CSN_Report_Categories.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-28-1",
        "step": "Load 2024_CSN_Reports_by_Military_Consumers.csv and 2024_CSN_Report_Categories.csv.",
        "query": "Which files are needed for analysis?",
        "answer": ["2024_CSN_Reports_by_Military_Consumers.csv", "2024_CSN_Report_Categories.csv"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Reports_by_Military_Consumers.csv", "2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-hard-28-2",
        "step": "For the military file: slice rows 12-22 to isolate the Top Categories section, use its first row to set proper column names.",
        "query": "What are the fraud categories in the Top 10 Fraud Categories section in the military data?",
        "answer": ["Imposter Scams", "Online Shopping and Negative Reviews", "Investment Related", "Business and Job Opportunities", "Prizes, Sweepstakes and Lotteries", "Internet Services", "Telephone and Mobile Services", "Mortgage Foreclosure Relief and Debt Management", "Travel, Vacations and Timeshare Plans", "Advance Payments for Credit Services"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Reports_by_Military_Consumers.csv"]
      },
      {
        "id": "legal-hard-28-3",
        "step": "For the general population file: use the second row to set column names, then remove the first two header rows and the last four footer rows to leave only data rows.",
        "query": "Which are the column names in the table containing general population data?",
        "answer": ["Rank","Category"," # of Reports ","Percentage"],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-hard-28-4",
        "step": "Convert the '# of Reports' column in the military dataframe from comma-separated numeric strings to integers.",
        "query": "What are the integer values in the '# of Reports' column for the military data?",
        "answer": [44587, 11515, 4750, 4655, 3469, 2558, 2247, 2071, 1385, 1189],
        "answer_type": "list_exact",
        "data_sources": ["2024_CSN_Reports_by_Military_Consumers.csv"]
      },
      {
        "id": "legal-hard-28-5",
        "step": "Compute total military reports and the number of military Imposter Scam reports, then calculate the share (military_imposter_scams / total_military_reports).",
        "query": "What is the proportion of imposter scam reports among all military reports? Round to 4 digits after decimal.",
        "answer": 0.5685,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Reports_by_Military_Consumers.csv"]
      },
      {
        "id": "legal-hard-28-6",
        "step": "Retrieve the Percentage value for the Imposter Scams row in the general population dataframe, strip the '%' sign, and convert it to a decimal fraction.",
        "query": "What is the decimal equivalent of the percentage value associated with Imposter Scams in the general population data? Round to 4 digits after decimal.",
        "answer": 0.1307,
        "answer_type": "numeric_exact",
        "data_sources": ["2024_CSN_Report_Categories.csv"]
      },
      {
        "id": "legal-hard-28-7",
        "step": "Compare the military Imposter Scam share with the general population share.",
        "query": "Does military or general population have a higher imposter scam share?",
        "answer": "Military",
        "answer_type": "string_approximate",
        "data_sources": ["2024_CSN_Report_Categories.csv", "2024_CSN_Reports_by_Military_Consumers.csv"]
      }
    ]
  },
  {
    "id": "legal-hard-29",
    "query": "Among states with 5 or more metro areas, which metropolitan area had the largest percentage of fraud reports in its own state?",
    "answer": "Washington-Arlington-Alexandria, DC-VA-MD-WV Metropolitan Statistical Area",
    "answer_type": "string_exact",
    "runtime": 1,
    "data_sources": [
      "State MSA Fraud and Other Data/*.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-29-1",
        "query": "List the states with five or more metro areas.",
        "answer": [
          "Alabama",
          "Arizona",
          "Arkansas",
          "California",
          "Colorado",
          "Connecticut",
          "Florida",
          "Georgia",
          "Idaho",
          "Illinois",
          "Indiana",
          "Iowa",
          "Kansas",
          "Kentucky",
          "Louisiana",
          "Maryland",
          "Massachusetts",
          "Michigan",
          "Minnesota",
          "Mississippi",
          "Missouri",
          "New Jersey",
          "New York",
          "North Carolina",
          "Ohio",
          "Oregon",
          "Pennsylvania",
          "South Carolina",
          "Tennessee",
          "Texas",
          "Utah",
          "Virginia",
          "Washington",
          "West Virginia",
          "Wisconsin"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Fraud and Other Data/*.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-29-1",
        "step": "List all CSV files in the 'State MSA Fraud and Other data' directory and read them.",
        "query": "How many state-specific CSV files are there?",
        "answer": 52,
        "answer_type": "numeric_exact",
        "data_sources":  [
          "State MSA Fraud and Other Data/*.csv"
        ]
      },
      {
        "id": "legal-hard-29-2",
        "step": "For each CSV, drop the first row and the last four footer rows, then use the first remaining row as the header.",
        "query": "What are the column names in each CSV file?",
        "answer": ["Metropolitan Area", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": ["State MSA Fraud and Other Data/*.csv"]
      },
      {
        "id": "legal-hard-29-3",
        "step": "Skip/filter out any state that contains data for fewer than five metropolitan areas.",
        "query": "What states have more five or more metro areas?",
        "answer": [
          "Alabama",
          "Arizona",
          "Arkansas",
          "California",
          "Colorado",
          "Connecticut",
          "Florida",
          "Georgia",
          "Idaho",
          "Illinois",
          "Indiana",
          "Iowa",
          "Kansas",
          "Kentucky",
          "Louisiana",
          "Maryland",
          "Massachusetts",
          "Michigan",
          "Minnesota",
          "Mississippi",
          "Missouri",
          "New Jersey",
          "New York",
          "North Carolina",
          "Ohio",
          "Oregon",
          "Pennsylvania",
          "South Carolina",
          "Tennessee",
          "Texas",
          "Utah",
          "Virginia",
          "Washington",
          "West Virginia",
          "Wisconsin"
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Fraud and Other Data/*.csv"
        ]
      },
      {
        "id": "legal-hard-29-4",
        "step": "Clean the '# of Reports' column by removing commas and converting the values to integers.",
        "query": "What are the cleaned integer values in the '# of Reports' column of all metro areas in the states considered?",
        "answer":
        [1939, 1948, 167515, 9834, 1330, 6737, 5541, 821, 2087, 1453, 3860, 7635, 1769, 3587, 1773, 2226, 1108, 805, 2496, 1415, 1532, 1142, 6855, 19316, 38139, 1306, 1911, 851, 844, 728, 2226, 2183, 606, 1142, 695, 38139, 1818, 2266, 1361, 52648, 3665, 2473, 121966, 1287, 109978, 14070, 1046, 1127, 3332, 2425, 785, 7336, 839, 1112, 4675, 1455, 121966, 30335, 1407, 5043, 7162, 1244, 1016, 902, 4617, 1462, 2756, 35466, 4317, 2352, 2472, 3675, 159709, 10479, 136239, 8395, 1591, 3254, 6424, 5061, 2247, 3103, 964, 36765, 1383, 1324, 2909, 2938, 1504, 12512, 3429, 11988, 5211, 2298, 31560, 16226, 171462, 5479, 19410, 6266, 63405, 12534, 2920, 7267, 9665, 3281, 4280, 1430, 6363, 66454, 1822, 4321, 1143, 708, 66361, 4978, 10409, 702, 1437, 2954, 4598, 1157, 1437, 1376, 1500, 3006, 1145, 6737, 4186, 1046, 1134, 1754, 1912, 2598, 8856, 25046, 916, 25458, 4668, 1523, 1065, 1180, 10233, 25046, 1324, 8993, 3711, 24149, 31336, 28999, 8820, 2569, 664, 841, 735, 1007, 1194, 6344, 862, 1069, 706, 4105, 1382, 158000, 24149, 1395, 2472, 4431, 31318, 1613, 14501, 1073, 850, 3006, 1121, 10455, 2296, 11637, 960, 967, 1025, 2114, 8844, 915, 309066, 11364, 6626, 2444, 1009, 9834, 17509, 48136, 13548, 2797, 13480, 2611, 5559, 4616, 1451, 4784, 1695, 8141, 25046, 1262, 1635, 5270, 1945, 48136, 7936, 6492, 1182, 11078, 2360, 3563, 2239, 1760, 1390, 1004, 21651, 1912, 1059, 28077, 5300, 7415, 725, 373, 520, 673, 9133, 11861, 13836, 7428, 2978, 1252, 5378, 967, 1831, 3665, 2569, 1280, 109978, 862, 1069, 1823, 4462, 10275, 39443, 5396, 1483, 3042, 1807, 2398, 15942, 1488, 1674, 6545, 2309, 2522, 17332, 6883, 3356, 996, 5324, 5697, 13144, 1625, 1518, 2371, 1025, 989, 2598, 2607, 20145, 3674, 979, 28077, 109978, 1823, 1257, 24149, 4186, 826, 1880, 2569, 5868, 14501, 735, 785, 992, 1560, 2322, 59918, 1255, 17440, 4994, 8660, 14070, 4730, 309066, 121966, 5497, 1897, 1299, 2141, 20649, 5541, 2652, 1248, 1471, 1167, 1047, 7978, 1453, 6371, 6748, 5391, 1270, 2845, 76729, 3500, 878, 1622, 14321, 1872, 9625, 2088, 937, 1255, 11969, 1060, 191725, 2244, 4819, 1225, 9522, 1747, 61410, 33026, 2969, 43651, 60059, 22452, 3028, 2699, 3619, 4928, 8456, 1299, 6477, 3432, 1611, 1624, 2631, 158000, 3376, 1011, 1595, 893, 785, 3296, 3959, 2159, 42059, 7571, 1748, 1136, 996, 773, 1163, 2732, 4165, 2207, 29934, 973, 3979, 807, 2209, 3376, 6021, 1443, 11283, 895, 1087, 1596, 24559, 1070, 1155, 856, 2110, 5811, 2461, 3269, 2328, 947, 571, 1164, 3621, 29934, 50609, 6424, 925, 1515, 1921, 1113, 1596, 24559, 4427, 856, 42059],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Fraud and Other Data/*.csv"
        ]
      },
      {
        "id": "legal-hard-29-5",
        "step": "Calculate each metro area's share of fraud reports within its state by dividing its '# of Reports' by the state's total '# of Reports'.",
        "query": "Which are the fractions of fraud reports for each metropolitan area within its state for all metro areas in the states considered?",
        "answer":
        [0.00897452512311623, 0.009016180990113674, 0.775331395564113, 0.045515977339208355, 0.00615581145628911, 0.031181730662420856, 0.02564612878142704, 0.0037999407561002704, 0.009659532713740883, 0.006725108305254193, 0.017865738512237567, 0.0353380605028326, 0.008187692079831155, 0.016602177213315066, 0.021504724247092072, 0.026999163098717964, 0.01343893652892161, 0.009763848290416873, 0.030273994202336046, 0.017162540783776246, 0.018581634262010746, 0.01385132266789574, 0.08314432301963685, 0.23428384295365506, 0.4625880868921853, 0.015840479338241537, 0.023178526811163537, 0.010321782478440695, 0.010236879449828375, 0.008829914975681346, 0.044135141565548416, 0.04328257593782219, 0.012015227218653344, 0.022642556903798874, 0.013779839796970419, 0.7561860575779206, 0.036045681655960025, 0.044928225870410024, 0.026984693472916172, 0.18029087347654418, 0.012550639175116517, 0.00846868504230918, 0.41766746456541914, 0.004407277658492485, 0.3766150600821185, 0.06640112509084731, 0.004936430479390639, 0.0053186970843912525, 0.015724843553852397, 0.011444401446006022, 0.0037046825299442174, 0.03462108412696915, 0.00395952693327796, 0.005247906972354102, 0.02206291825157862, 0.006866640867603613, 0.5755991203148744, 0.143161203243131, 0.006640112509084731, 0.02379963566689005, 0.033799918827338196, 0.005870859958281027, 0.004794850255316337, 0.004256845403833993, 0.02178919648503497, 0.0033471538889486684, 0.006309682707211033, 0.08119709974381223, 0.009883490655671274, 0.0053847509896082545, 0.005659483182955615, 0.008413673421262898, 0.3656433655609459, 0.023990988784058205, 0.3119103274120914, 0.01921980635959239, 0.0036424909967970806, 0.007449821309602577, 0.014707330083862002, 0.011586830254424906, 0.005144360320429315, 0.0071041166329738155, 0.002207015286557125, 0.0841710757367974, 0.003166288528328323, 0.0030312118665992045, 0.006659966253728917, 0.0067263598671211955, 0.0034433101566202448, 0.026892374619031857, 0.0073700409661653, 0.02576612747226294, 0.011200140995826008, 0.004939152563501855, 0.06783274800005158, 0.03487497367074895, 0.36852784022765667, 0.011776160528906293, 0.04171842961600131, 0.01346768057567564, 0.13627805408565496, 0.026939659804583224, 0.006276033718635951, 0.015619156518262829, 0.020773241743361804, 0.0070519406270015605, 0.009199117916356806, 0.003073537060838839, 0.01367616525742485, 0.1428313509377512, 0.003916073094299556, 0.04029580722172486, 0.010659131602506715, 0.006602506714413608, 0.6188544464339003, 0.046422709638913755, 0.09706990450611758, 0.0065465532676812896, 0.01340085049239033, 0.02754774694121158, 0.0428789913458669, 0.010789689644882125, 0.01340085049239033, 0.012831990450611758, 0.013988361683079677, 0.028032676812891674, 0.010677782751417488, 0.08458998279823714, 0.05255954697839107, 0.013133608728952953, 0.01423853948244039, 0.022023278882010975, 0.02400713182577251, 0.03262056929045867, 0.11119621310096305, 0.3144783596800723, 0.011501324661301056, 0.3196514445713999, 0.10364350895890229, 0.03381513799151846, 0.02364617331645907, 0.02619951597504385, 0.22720309065476588, 0.5560958280601257, 0.029396745043184794, 0.07131415339719596, 0.02942809109941001, 0.19150066611685593, 0.24849330711159043, 0.22996098458415276, 0.0699422698724862, 0.020372073843811456, 0.005265495146862907, 0.006669098521854977, 0.0058285224893738505, 0.007985472308570704, 0.00946837530926854, 0.050307682547738375, 0.006835627735837087, 0.008477129987946457, 0.005598553574827127, 0.03255249635221722, 0.005633665021136435, 0.6440803714468573, 0.09844238538019086, 0.005686658975749151, 0.010077004292510324, 0.01806278560684193, 0.12766651312008023, 0.006575326830023929, 0.05911271814146125, 0.004374039484572645, 0.0034649893400622066, 0.012253832889678816, 0.004569709470834981, 0.028278003472879624, 0.0062100713509068975, 0.03147500013523675, 0.0025965455125743124, 0.0026154786569368336, 0.002772353281654865, 0.005717809597481351, 0.023920675534590853, 0.0024748324416723915, 0.8359415993638464, 0.030736607505098424, 0.01792157350658062, 0.0066103721174287705, 0.00272907752311196, 0.08226466233342535, 0.14646857563513774, 0.4026735596991827, 0.1133335006399478, 0.023397830033210363, 0.11276465815075999, 0.021841878518667236, 0.04650287349110347, 0.038614366618984285, 0.012138094879581065, 0.11688819390148554, 0.04141419077404222, 0.19891028146989836, 0.6119526974198592, 0.03083463643471462, 0.010129860474337686, 0.03265098758395083, 0.012050506802805382, 0.2982330053778097, 0.04916854600877302, 0.040222051498104136, 0.0073232385814477954, 0.06863522589279077, 0.01462169462962504, 0.02207504151074323, 0.013872022998190875, 0.010904314639042402, 0.008611930311516443, 0.00622041585090828, 0.13414165696017447, 0.011846050903323338, 0.006561175683378355, 0.17395479665931451, 0.03283685658347996, 0.04594062105028376, 0.06346288515406162, 0.03265056022408964, 0.04551820728291316, 0.05891106442577031, 0.7994572829131653, 0.2775606673999017, 0.3237778765825006, 0.1738235087637189, 0.06968853111178715, 0.0292982004539817, 0.1258512156881099, 0.007795620908709813, 0.014760891296636677, 0.0295459675598981, 0.02071039308632421, 0.010318919093224984, 0.8866047531521073, 0.006949147076843701, 0.00861790977395118, 0.014696398052304022, 0.06770043090368393, 0.15589913212356618, 0.5984554227104448, 0.0818716999453784, 0.02250106208654488, 0.04615524670753171, 0.027417005522850032, 0.03966980429783785, 0.2637264470876276, 0.024615791824513227, 0.02769276580257738, 0.10827308971198862, 0.038197488792205, 0.041721120283213946, 0.2867210375688597, 0.11386458005922348, 0.055517874571953216, 0.03718360337489733, 0.19876054655417008, 0.2126857313521989, 0.49070409915627566, 0.060666019562458, 0.008635598234196514, 0.013488144541027624, 0.005831019888044418, 0.005626223091976516, 0.01477950211623356, 0.014830701315250534, 0.11460087379966322, 0.020900650798707506, 0.005569335093068766, 0.15972443453329085, 0.6256428343876576, 0.010370682200882901, 0.02176698760130221, 0.4181789845535776, 0.07248735886957124, 0.014303525663226431, 0.032555240008311975, 0.0444863891390178, 0.10161390870679504, 0.25110826348964466, 0.012727713513887927, 0.01359354436517282, 0.017178084089492278, 0.016224817730813634, 0.024150017160864908, 0.6231786082018533, 0.013052657853955839, 0.1813851418111473, 0.05194021778697647, 0.0900685394543885, 0.030772528246425183, 0.010344993504306404, 0.6759589349687025, 0.2667521094600919, 0.012022500907647421, 0.0041489329128264795, 0.019936767143471056, 0.0328595985020566, 0.31691632389956415, 0.08504205291914789, 0.040702314445331206, 0.019154030327214685, 0.022576585425747437, 0.01791086008963104, 0.016069126404321937, 0.12244459451163361, 0.022300325372951072, 0.09778071090920253, 0.1035668242372153, 0.08273988581251152, 0.012325669419723012, 0.027611440550481866, 0.7446742432330133, 0.03396838029057523, 0.008521210827178586, 0.01574191795180372, 0.13898890689752225, 0.01816823082970195, 0.019353269043616738, 0.00419840267668278, 0.00188405330845391, 0.0025234652103624943, 0.024066418408628443, 0.002131373006361947, 0.385507065702589, 0.004512076439883217, 0.00968970426194172, 0.0024631433328239486, 0.0191461639307344, 0.0035127440019946435, 0.12347888332140301, 0.06640634425293365, 0.005969855147064738, 0.08777034254783525, 0.12076238810291716, 0.045144893149847584, 0.006088488172890544, 0.005426958249217826, 0.007276829160399894, 0.009908873750331771, 0.01700272654886474, 0.002611937297419028, 0.013023493360572012, 0.006900822790409626, 0.003239284823819903, 0.007335537608181112, 0.011884112960052035, 0.7136791515348618, 0.015249245668238567, 0.004566643178492059, 0.007204545865177878, 0.004033642293168555, 0.0035458109743978896, 0.014887889135815853, 0.0178826313982691, 0.009752109418758018, 0.18997867996458706, 0.6193553664921466, 0.1429973821989529, 0.09293193717277487, 0.08147905759162304, 0.06323625654450261, 0.02575687108276305, 0.06050539277567382, 0.09224193298341196, 0.048878258366000044, 0.6629459836555711, 0.0215489557725954, 0.08812260536398467, 0.029755539987463588, 0.08144979904870764, 0.12447918587072748, 0.22200508830795324, 0.05320600272851296, 0.4160244828730504, 0.03300025810257734, 0.04007964308100734, 0.042952875635815596, 0.6609521759022526, 0.028796727399951556, 0.03108431789434023, 0.023037381919961245, 0.05678606991953064, 0.15639045132814813, 0.023716367280857298, 0.03150296815974096, 0.022434661938169762, 0.009126127515226274, 0.005502659779508133, 0.011217330969084881, 0.03489515072083879, 0.2884704340451777, 0.4877129750982962, 0.061907331740035466, 0.00891411610515766, 0.01459987664790687, 0.025100939488573257, 0.014543126314826672, 0.02085429433824202, 0.3209026407599535, 0.057845840247742746, 0.011185009995949353, 0.5495681488547125],
        "answer_type": "list_approximate",
        "data_sources": ["State MSA Fraud and Other Data/*.csv"]
      },
      {
        "id": "legal-hard-29-6",
        "step": "Sort the metros in descending order by this share and take the top metro for that state.",
        "query": "What are the names of the top metropolitan areas for each state by their share of fraud reports?",
        "answer":
        ["Atlanta-Sandy Springs-Roswell, GA Metropolitan Statistical Area", "Minneapolis-St. Paul-Bloomington, MN-WI Metropolitan Statistical Area", "Minneapolis-St. Paul-Bloomington, MN-WI Metropolitan Statistical Area", "Philadelphia-Camden-Wilmington, PA-NJ-DE-MD Metropolitan Statistical Area", "Philadelphia-Camden-Wilmington, PA-NJ-DE-MD Metropolitan Statistical Area", "Dallas-Fort Worth-Arlington, TX Metropolitan Statistical Area", "Miami-Fort Lauderdale-West Palm Beach, FL Metropolitan Statistical Area", "Detroit-Warren-Dearborn, MI Metropolitan Statistical Area", "Nashville-Davidson--Murfreesboro--Franklin, TN Metropolitan Statistical Area", "Memphis, TN-MS-AR Metropolitan Statistical Area", "Cleveland, OH Metropolitan Statistical Area", "Chicago-Naperville-Elgin, IL-IN Metropolitan Statistical Area", "New York-Newark-Jersey City, NY-NJ Metropolitan Statistical Area", "Charlotte-Concord-Gastonia, NC-SC Metropolitan Statistical Area", "Memphis, TN-MS-AR Metropolitan Statistical Area", "Charlotte-Concord-Gastonia, NC-SC Metropolitan Statistical Area", "San Juan-Bayam\u00f3n-Caguas, PR Metropolitan Statistical Area", "Hartford-West Hartford-East Hartford, CT Metropolitan Statistical Area", "Washington-Arlington-Alexandria, DC-VA-MD-WV Metropolitan Statistical Area", "Denver-Aurora-Centennial, CO Metropolitan Statistical Area", "New Orleans-Metairie, LA Metropolitan Statistical Area", "Salt Lake City-Murray, UT Metropolitan Statistical Area", "Washington-Arlington-Alexandria, DC-VA-MD-WV Metropolitan Statistical Area", "Cincinnati, OH-KY-IN Metropolitan Statistical Area", "Boston-Cambridge-Newton, MA-NH Metropolitan Statistical Area", "New York-Newark-Jersey City, NY-NJ Metropolitan Statistical Area", "Birmingham, AL Metropolitan Statistical Area", "Phoenix-Mesa-Chandler, AZ Metropolitan Statistical Area", "Los Angeles-Long Beach-Anaheim, CA Metropolitan Statistical Area", "Chicago-Naperville-Elgin, IL-IN Metropolitan Statistical Area", "Boise City, ID Metropolitan Statistical Area", "Portland-Vancouver-Hillsboro, OR-WA Metropolitan Statistical Area", "Omaha, NE-IA Metropolitan Statistical Area", "Kansas City, MO-KS Metropolitan Statistical Area", "Seattle-Tacoma-Bellevue, WA Metropolitan Statistical Area", "St. Louis, MO-IL Metropolitan Statistical Area"],
        "answer_type": "list_exact",
        "data_sources": ["State MSA Fraud and Other Data/*.csv"]
      },
      {
        "id": "legal-hard-29-7",
        "step": "Keep track of the metro area with the highest share across all eligible states and print its name at the end.",
        "query": "What is the name of the metro area with the highest percentage of fraud reports across all states with at least five metros?",
        "answer": "Washington-Arlington-Alexandria, DC-VA-MD-WV Metropolitan Statistical Area",
        "answer_type": "string_exact",
        "data_sources": ["State MSA Fraud and Other Data/*.csv"]
      }
    ]
  },
  {
    "id": "legal-hard-30",
    "query": "Does there exist a metropolitan area in which the number of reports of identity theft exceeded the number of reports of fraud in 2024? Answer with Yes or No. No explanation needed.",
    "answer": "No",
    "answer_type": "string_exact",
    "runtime": 1,
    "data_sources": [
      "State MSA Fraud and Other Data/*.csv",
      "State MSA Identity Theft Data/*.csv"
    ],
    "subtasks": [
      {
        "id": "legal-hard-30-1",
        "query": "List the number of fraud reports for each area. Answer in a list of numbers.",
        "answer": [
          1329,
          895,
          2266,
          10534,
          746,
          2158,
          1927,
          1921,
          1113,
          1596,
          24559,
          4427,
          856,
          42059,
          2461,
          3269,
          2328,
          947,
          571,
          1164,
          3621,
          29934,
          50609,
          6424,
          925,
          1515,
          1070,
          1155,
          2110,
          5811,
          2164,
          2075,
          807,
          2209,
          3376,
          6021,
          1443,
          11283,
          1087,
          1163,
          2732,
          4165,
          2207,
          973,
          3979,
          7571,
          1748,
          1136,
          996,
          773,
          1624,
          2631,
          158000,
          1011,
          1595,
          893,
          785,
          3296,
          3959,
          2159,
          4138,
          48682,
          6697,
          9625,
          2088,
          937,
          1255,
          11969,
          1060,
          191725,
          2244,
          4819,
          1225,
          9522,
          1747,
          61410,
          33026,
          2969,
          43651,
          60059,
          22452,
          3028,
          2699,
          3619,
          4928,
          8456,
          1299,
          6477,
          3432,
          1611,
          17440,
          1270,
          2845,
          76729,
          3500,
          878,
          1622,
          14321,
          1872,
          1299,
          2141,
          20649,
          5541,
          2652,
          1248,
          1471,
          1167,
          1047,
          7978,
          1453,
          6371,
          6748,
          5391,
          14070,
          4730,
          309066,
          121966,
          5497,
          1897,
          1560,
          2322,
          59918,
          1255,
          4994,
          8660,
          1257,
          24149,
          4186,
          826,
          1880,
          2569,
          5868,
          14501,
          735,
          992,
          3124,
          3303,
          1518,
          2371,
          1025,
          989,
          2598,
          2607,
          20145,
          3674,
          979,
          28077,
          109978,
          1823,
          797,
          2183,
          606,
          5324,
          5697,
          13144,
          1625,
          2398,
          15942,
          1488,
          1674,
          6545,
          2309,
          2522,
          17332,
          6883,
          3356,
          1070,
          1222,
          1025,
          5215,
          4462,
          10275,
          39443,
          5396,
          1483,
          3042,
          1807,
          967,
          1831,
          3665,
          1280,
          862,
          1069,
          1523,
          1284,
          15385,
          10338,
          11861,
          13836,
          7428,
          2978,
          1252,
          5378,
          725,
          373,
          520,
          673,
          9133,
          1635,
          5270,
          1945,
          48136,
          7936,
          6492,
          1182,
          11078,
          2360,
          3563,
          2239,
          1760,
          1390,
          1004,
          21651,
          1912,
          1059,
          5300,
          7415,
          4784,
          1695,
          8141,
          25046,
          1262,
          9834,
          17509,
          13548,
          2797,
          13480,
          2611,
          5559,
          4616,
          1451,
          10455,
          2296,
          11637,
          960,
          967,
          1025,
          2114,
          8844,
          915,
          11364,
          6626,
          2444,
          1009,
          1382,
          1395,
          2472,
          4431,
          31318,
          1613,
          1073,
          850,
          3006,
          1121,
          1608,
          1101,
          1079,
          1274,
          2743,
          8993,
          3711,
          31336,
          28999,
          8820,
          664,
          841,
          735,
          1007,
          1194,
          6344,
          706,
          4105,
          4668,
          1065,
          1180,
          10233,
          1324,
          6737,
          1046,
          1134,
          1754,
          1912,
          8856,
          916,
          25458,
          2036,
          1532,
          9823,
          4321,
          1143,
          708,
          66361,
          4978,
          10409,
          702,
          1437,
          2954,
          4598,
          1157,
          1437,
          1376,
          1500,
          1145,
          12512,
          3429,
          11988,
          5211,
          2298,
          31560,
          16226,
          171462,
          5479,
          19410,
          6266,
          63405,
          12534,
          2920,
          7267,
          9665,
          3281,
          4280,
          1430,
          6363,
          66454,
          1822,
          1462,
          2756,
          35466,
          4317,
          2352,
          2472,
          3675,
          159709,
          10479,
          136239,
          8395,
          1591,
          3254,
          6424,
          5061,
          2247,
          3103,
          964,
          36765,
          1383,
          2909,
          2938,
          1504,
          1046,
          1127,
          3332,
          2425,
          785,
          7336,
          839,
          1112,
          4675,
          1455,
          30335,
          1407,
          5043,
          7162,
          1244,
          1016,
          902,
          4617,
          52648,
          2473,
          1287,
          2226,
          1142,
          695,
          38139,
          1818,
          1361,
          1773,
          1108,
          805,
          2496,
          1415,
          1532,
          6855,
          19316,
          1306,
          1911,
          851,
          844,
          728,
          1494,
          4951,
          1131,
          1939,
          1948,
          167515,
          1330,
          821,
          2087,
          3860,
          7635,
          1769,
          3587
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Fraud and Other Data/*.csv"
        ]
      },
      {
        "id": "legal-hard-30-2",
        "query": "List the number of identity theft reports for each area. Answer in a list of numbers.",
        "answer": [
          166,
          132,
          352,
          1563,
          109,
          430,
          192,
          295,
          152,
          240,
          4247,
          703,
          181,
          7242,
          350,
          370,
          385,
          135,
          110,
          146,
          525,
          4548,
          7838,
          1063,
          132,
          249,
          190,
          235,
          416,
          1085,
          258,
          242,
          138,
          388,
          620,
          1147,
          255,
          1580,
          183,
          184,
          374,
          605,
          345,
          124,
          653,
          1173,
          224,
          242,
          168,
          129,
          318,
          611,
          37486,
          186,
          419,
          171,
          184,
          572,
          968,
          455,
          464,
          13075,
          1069,
          2525,
          382,
          231,
          180,
          3235,
          301,
          71624,
          482,
          1082,
          214,
          1837,
          299,
          15889,
          6483,
          555,
          10260,
          11641,
          4515,
          370,
          385,
          677,
          681,
          2048,
          136,
          1278,
          1186,
          306,
          5422,
          206,
          335,
          16677,
          427,
          141,
          221,
          2146,
          309,
          264,
          451,
          3968,
          1302,
          467,
          260,
          314,
          223,
          181,
          1459,
          453,
          1355,
          1491,
          902,
          2414,
          872,
          67819,
          28438,
          1112,
          367,
          372,
          550,
          19929,
          246,
          1400,
          2561,
          212,
          4477,
          730,
          164,
          181,
          405,
          960,
          2653,
          120,
          145,
          663,
          525,
          155,
          300,
          152,
          155,
          342,
          429,
          3637,
          488,
          146,
          4689,
          19689,
          191,
          153,
          378,
          100,
          895,
          1042,
          2212,
          372,
          289,
          4604,
          401,
          430,
          1168,
          505,
          640,
          4268,
          1334,
          757,
          147,
          174,
          139,
          806,
          677,
          1692,
          7056,
          588,
          234,
          641,
          298,
          123,
          321,
          502,
          143,
          130,
          131,
          302,
          225,
          2968,
          1935,
          2571,
          2613,
          1414,
          498,
          194,
          1061,
          122,
          83,
          76,
          193,
          1042,
          368,
          813,
          320,
          10144,
          1348,
          1268,
          251,
          1880,
          592,
          532,
          336,
          361,
          196,
          162,
          4150,
          382,
          218,
          855,
          1279,
          940,
          302,
          1873,
          5502,
          236,
          2113,
          2790,
          2758,
          640,
          2525,
          448,
          944,
          972,
          392,
          1719,
          382,
          2253,
          132,
          119,
          157,
          320,
          1959,
          100,
          2586,
          1038,
          432,
          176,
          205,
          228,
          397,
          732,
          6570,
          275,
          166,
          134,
          475,
          203,
          279,
          217,
          166,
          167,
          423,
          1720,
          723,
          7115,
          6805,
          1984,
          124,
          164,
          138,
          226,
          300,
          1163,
          127,
          865,
          796,
          172,
          263,
          2641,
          317,
          1135,
          201,
          165,
          314,
          251,
          1407,
          194,
          4470,
          229,
          240,
          1433,
          771,
          196,
          119,
          15687,
          932,
          1742,
          95,
          206,
          474,
          706,
          208,
          291,
          240,
          280,
          178,
          2727,
          586,
          1998,
          783,
          290,
          5986,
          3598,
          55457,
          1402,
          2770,
          1108,
          15099,
          1847,
          606,
          1166,
          2051,
          452,
          518,
          235,
          1417,
          13953,
          236,
          327,
          535,
          7473,
          1487,
          868,
          490,
          967,
          37114,
          1950,
          41668,
          2340,
          442,
          722,
          768,
          1867,
          707,
          782,
          235,
          7889,
          298,
          544,
          701,
          375,
          107,
          185,
          608,
          438,
          119,
          1236,
          141,
          171,
          805,
          243,
          4571,
          253,
          1151,
          1648,
          172,
          182,
          165,
          895,
          8940,
          427,
          239,
          269,
          152,
          103,
          5552,
          233,
          178,
          276,
          159,
          103,
          350,
          242,
          250,
          1123,
          3882,
          207,
          306,
          118,
          109,
          118,
          198,
          709,
          140,
          606,
          386,
          42616,
          217,
          176,
          384,
          1079,
          1801,
          437,
          669
        ],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Identity Theft Data/*.csv"
        ]
      }
    ],
    "key_functionalities": [
      {
        "id": "legal-hard-30-1",
        "step": "Collect file paths for every CSV in the 'State MSA Fraud and Other Data' directory and in the 'State MSA Identity Theft Data' directory.",
        "query": "Which folders are processed to collect data on fraud and identity theft reports?",
        "answer": [
          "State MSA Fraud and Other Data/",
          "State MSA Identity Theft Data/"
        ],
        "answer_type": "list_approximate",
        "data_sources": [
          "State MSA Fraud and Other Data/*.csv",
          "State MSA Identity Theft Data/*.csv"
        ]
      },
      {
        "id": "legal-hard-30-2",
        "step": "For each Fraud CSV: (a) read the file, (b) drop the first row and last four rows that hold meta-data / totals, (c) take the first remaining row as the header, (d) drop that header row from the data",
        "query": "What are the column names for the tables for each state?",
        "answer": ["Metropolitan Area", "# of Reports"],
        "answer_type": "list_exact",
        "data_sources": [
          "State MSA Fraud and Other Data/*.csv",
          "State MSA Identity Theft Data/*.csv"
        ]
      },
      {
        "id": "legal-hard-30-3",
        "step": "Convert the '# of Reports' column from a comma-separated string to an integer.",
        "query": "What are all the # of Reports values for the fraud data?",
        "answer": [1939, 1948, 167515, 9834, 1330, 6737, 5541, 821, 2087, 1453, 3860, 7635, 1769, 3587, 1131, 59918, 1494, 2075, 4951, 1773, 2226, 1108, 805, 2496, 1415, 1532, 1142, 6855, 19316, 38139, 1306, 1911, 851, 844, 728, 2226, 2183, 606, 1142, 695, 38139, 1818, 2266, 1361, 52648, 3665, 2473, 121966, 1287, 109978, 14070, 1046, 1127, 3332, 2425, 785, 7336, 839, 1112, 4675, 1455, 121966, 30335, 1407, 5043, 7162, 1244, 1016, 902, 4617, 1462, 2756, 35466, 4317, 2352, 2472, 3675, 159709, 10479, 136239, 8395, 1591, 3254, 6424, 5061, 2247, 3103, 964, 36765, 1383, 1324, 2909, 2938, 1504, 12512, 3429, 11988, 5211, 2298, 31560, 16226, 171462, 5479, 19410, 6266, 63405, 12534, 2920, 7267, 9665, 3281, 4280, 1430, 6363, 66454, 1822, 4321, 1143, 708, 66361, 4978, 10409, 702, 1437, 2954, 4598, 1157, 1437, 1376, 1500, 3006, 1145, 2036, 1532, 9823, 6737, 4186, 1046, 1134, 1754, 1912, 2598, 8856, 25046, 916, 25458, 4668, 1523, 1065, 1180, 10233, 25046, 1324, 8993, 3711, 24149, 31336, 28999, 8820, 2569, 664, 841, 735, 1007, 1194, 6344, 862, 1069, 706, 4105, 2743, 11283, 895, 1608, 1101, 1079, 1274, 1382, 158000, 24149, 1395, 2472, 4431, 31318, 1613, 14501, 1073, 850, 3006, 1121, 10455, 2296, 11637, 960, 967, 1025, 2114, 8844, 915, 309066, 11364, 6626, 2444, 1009, 9834, 17509, 48136, 13548, 2797, 13480, 2611, 5559, 4616, 1451, 4784, 1695, 8141, 25046, 1262, 109978, 1635, 5270, 1945, 48136, 7936, 6492, 1182, 11078, 2360, 3563, 2239, 1760, 1390, 1004, 21651, 1912, 1059, 28077, 5300, 7415, 725, 373, 520, 673, 9133, 11861, 13836, 7428, 2978, 1252, 5378, 1523, 1284, 15385, 10338, 967, 1831, 3665, 2569, 1280, 109978, 862, 1069, 1823, 4462, 10275, 39443, 5396, 1483, 3042, 1807, 1070, 1222, 1025, 5215, 2398, 15942, 1488, 1674, 6545, 2309, 2522, 17332, 6883, 3356, 996, 5324, 5697, 13144, 1625, 797, 2183, 606, 1518, 2371, 1025, 989, 2598, 2607, 20145, 3674, 979, 28077, 109978, 1823, 3124, 121966, 3303, 1257, 24149, 4186, 826, 1880, 2569, 5868, 14501, 735, 785, 992, 1560, 2322, 59918, 1255, 17440, 4994, 8660, 14070, 4730, 309066, 121966, 5497, 1897, 1299, 2141, 20649, 5541, 2652, 1248, 1471, 1167, 1047, 7978, 1453, 6371, 6748, 5391, 1270, 2845, 76729, 3500, 878, 1622, 14321, 1872, 17440, 9625, 2088, 937, 1255, 11969, 1060, 191725, 2244, 4819, 1225, 9522, 1747, 61410, 33026, 2969, 43651, 60059, 22452, 3028, 2699, 3619, 4928, 8456, 1299, 6477, 3432, 1611, 48682, 6697, 4138, 1624, 2631, 158000, 3376, 1011, 1595, 893, 785, 3296, 3959, 2159, 42059, 7571, 1748, 1136, 996, 773, 1163, 2732, 4165, 2207, 29934, 973, 3979, 807, 2209, 3376, 6021, 1443, 11283, 895, 1087, 2164, 2075, 1596, 24559, 1070, 1155, 856, 2110, 5811, 2461, 3269, 2328, 947, 571, 1164, 3621, 29934, 50609, 6424, 925, 1515, 1921, 1113, 1596, 24559, 4427, 856, 42059, 10534, 746, 2158, 1927, 1329, 895, 2266],
        "answer_type": "list_exact",
        "data_sources": ["State MSA Fraud and Other Data/*.csv"]
      },
      {
        "id": "legal-hard-30-4",
        "step": "For each Identity-Theft CSV perform the same cleaning steps",
        "query": "Which are the all numbers of identity theft reports of each MSA?",
        "answer": [606, 386, 42616, 2113, 217, 1135, 1302, 176, 384, 453, 1079, 1801, 437, 669, 140, 19929, 198, 242, 709, 276, 269, 159, 103, 350, 242, 250, 152, 1123, 3882, 5552, 207, 306, 118, 109, 118, 269, 378, 100, 152, 103, 5552, 233, 352, 178, 8940, 502, 427, 28438, 239, 19689, 2414, 107, 185, 608, 438, 119, 1236, 141, 171, 805, 243, 28438, 4571, 253, 1151, 1648, 172, 182, 165, 895, 327, 535, 7473, 1487, 868, 490, 967, 37114, 1950, 41668, 2340, 442, 722, 768, 1867, 707, 782, 235, 7889, 298, 317, 544, 701, 375, 2727, 586, 1998, 783, 290, 5986, 3598, 55457, 1402, 2770, 1108, 15099, 1847, 606, 1166, 2051, 452, 518, 235, 1417, 13953, 236, 771, 196, 119, 15687, 932, 1742, 95, 206, 474, 706, 208, 291, 240, 280, 475, 178, 229, 240, 1433, 1135, 730, 201, 165, 314, 251, 342, 1407, 5502, 194, 4470, 796, 302, 172, 263, 2641, 5502, 317, 1720, 723, 4477, 7115, 6805, 1984, 405, 124, 164, 138, 226, 300, 1163, 130, 131, 127, 865, 423, 1580, 132, 279, 217, 166, 167, 205, 37486, 4477, 228, 397, 732, 6570, 275, 2653, 166, 134, 475, 203, 1719, 382, 2253, 132, 119, 157, 320, 1959, 100, 67819, 2586, 1038, 432, 176, 2113, 2790, 10144, 2758, 640, 2525, 448, 944, 972, 392, 940, 302, 1873, 5502, 236, 19689, 368, 813, 320, 10144, 1348, 1268, 251, 1880, 592, 532, 336, 361, 196, 162, 4150, 382, 218, 4689, 855, 1279, 122, 83, 76, 193, 1042, 2571, 2613, 1414, 498, 194, 1061, 302, 225, 2968, 1935, 123, 321, 502, 405, 143, 19689, 130, 131, 191, 677, 1692, 7056, 588, 234, 641, 298, 147, 174, 139, 806, 289, 4604, 401, 430, 1168, 505, 640, 4268, 1334, 757, 168, 895, 1042, 2212, 372, 153, 378, 100, 155, 300, 152, 155, 342, 429, 3637, 488, 146, 4689, 19689, 191, 663, 28438, 525, 212, 4477, 730, 164, 181, 405, 960, 2653, 120, 184, 145, 372, 550, 19929, 246, 5422, 1400, 2561, 2414, 872, 67819, 28438, 1112, 367, 264, 451, 3968, 1302, 467, 260, 314, 223, 181, 1459, 453, 1355, 1491, 902, 206, 335, 16677, 427, 141, 221, 2146, 309, 5422, 2525, 382, 231, 180, 3235, 301, 71624, 482, 1082, 214, 1837, 299, 15889, 6483, 555, 10260, 11641, 4515, 370, 385, 677, 681, 2048, 136, 1278, 1186, 306, 13075, 1069, 464, 318, 611, 37486, 620, 186, 419, 171, 184, 572, 968, 455, 7242, 1173, 224, 242, 168, 129, 184, 374, 605, 345, 4548, 124, 653, 138, 388, 620, 1147, 255, 1580, 132, 183, 258, 242, 240, 4247, 190, 235, 181, 416, 1085, 350, 370, 385, 135, 110, 146, 525, 4548, 7838, 1063, 132, 249, 295, 152, 240, 4247, 703, 181, 7242, 1563, 109, 430, 192, 166, 132, 352],
        "answer_type": "list_exact",
        "data_sources": ["State MSA Identity Theft Data/*.csv"]
      },
      {
        "id": "legal-hard-30-5",
        "step": "Map Metropolitan Area -> to number of identity-theft reports and fraud reports respectively.",
        "query": "What is the key for joining the datasets?",
        "answer": "Metropolitan Area",
        "answer_type": "string_exact",
        "data_sources": ["State MSA Identity Theft Data/*.csv", "State MSA Fraud and Other Data/*.csv"]
      },
      {
        "id": "legal-hard-30-6",
        "step": "Iterate over every metro in the identity-theft dictionary; for metros that also appear in the fraud dictionary compare the two counts. If any metro has identity-theft reports > fraud reports, and stop the search.",
        "query": "Which metropolitan areas have more identity theft reports than fraud reports?",
        "answer": [],
        "answer_type": "list_exact",
        "data_sources": ["State MSA Identity Theft Data/*.csv", "State MSA Fraud and Other Data/*.csv"]
      }
    ]
  }
]